struct Payload
{
	float4 color;
};

RaytracingAccelerationStructure AS_Local : register(t1, space15);
RaytracingAccelerationStructure AS_RootDesc : register(t0, space0);
RaytracingAccelerationStructure AS_Plain : register(t1, space0);

[shader("raygeneration")]
void RayGen()
{
	RayDesc ray;
	ray.Origin = float3(1, 2, 3);
	ray.Direction = float3(0, 0, 1);
	ray.TMin = 1.0;
	ray.TMax = 4.0;

	Payload p;
	p.color = float4(1, 2, 3, 4);
	TraceRay(AS_Local, RAY_FLAG_NONE, 0, 0, 0, 0, ray, p);
	TraceRay(AS_RootDesc, RAY_FLAG_NONE, 0, 0, 0, 0, ray, p);
	TraceRay(AS_Plain, RAY_FLAG_NONE, 0, 0, 0, 0, ray, p);
}

