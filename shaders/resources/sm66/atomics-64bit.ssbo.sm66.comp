[numthreads(128, 1, 1)]
void main(uint thr : SV_DispatchThreadID)
{
	RWStructuredBuffer<uint64_t> RW = ResourceDescriptorHeap[0];
	RWStructuredBuffer<int64_t> RWSign = ResourceDescriptorHeap[1];
	RWByteAddressBuffer RWBAB = ResourceDescriptorHeap[2];

	uint64_t thr64 = thr;

	InterlockedAdd(RW[0], thr64);
	InterlockedAnd(RW[1], thr64);
	InterlockedOr(RW[2], thr64);
	InterlockedXor(RW[3], thr64);
	InterlockedMin(RW[4], thr64);
	InterlockedMax(RW[5], thr64);
	InterlockedMin(RWSign[6], thr64);
	InterlockedMax(RWSign[7], thr64);

	uint64_t out_value;
	InterlockedExchange(RW[8], thr64, out_value);
	InterlockedCompareStore(RW[9], 10, out_value);
	InterlockedCompareExchange(RW[10], 20, thr64, out_value);

	RWBAB.InterlockedAdd64(0, thr64);
	RWBAB.InterlockedAnd64(8, thr64);
	RWBAB.InterlockedOr64(16, thr64);
}
