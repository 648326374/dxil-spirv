#version 460

struct _13
{
    float _m0;
    float _m1;
};

const _13 _27[4] = _13[](_13(1.0, 2.0), _13(3.0, 4.0), _13(5.0, 6.0), _13(7.0, 8.0));

layout(location = 0) in float F;
layout(location = 0) out vec2 SV_Target;

void main()
{
    SV_Target.x = _27[uint(int(F)) & 3u]._m1;
}


#if 0
// SPIR-V disassembly
; SPIR-V
; Version: 1.3
; Generator: Unknown(30017); 21022
; Bound: 43
; Schema: 0
OpCapability Shader
OpMemoryModel Logical GLSL450
OpEntryPoint Fragment %3 "main" %7 %10
OpExecutionMode %3 OriginUpperLeft
OpName %3 "main"
OpName %7 "F"
OpName %10 "SV_Target"
OpName %13 ""
OpDecorate %7 Location 0
OpDecorate %10 Location 0
%1 = OpTypeVoid
%2 = OpTypeFunction %1
%5 = OpTypeFloat 32
%6 = OpTypePointer Input %5
%7 = OpVariable %6 Input
%8 = OpTypeVector %5 2
%9 = OpTypePointer Output %8
%10 = OpVariable %9 Output
%11 = OpTypeInt 32 0
%12 = OpConstant %11 4
%13 = OpTypeStruct %5 %5
%14 = OpTypeArray %13 %12
%15 = OpConstant %5 1
%16 = OpConstant %5 2
%17 = OpConstantComposite %13 %15 %16
%18 = OpConstant %5 3
%19 = OpConstant %5 4
%20 = OpConstantComposite %13 %18 %19
%21 = OpConstant %5 5
%22 = OpConstant %5 6
%23 = OpConstantComposite %13 %21 %22
%24 = OpConstant %5 7
%25 = OpConstant %5 8
%26 = OpConstantComposite %13 %24 %25
%27 = OpConstantComposite %14 %17 %20 %23 %26
%28 = OpTypePointer Private %14
%29 = OpVariable %28 Private %27
%33 = OpConstant %11 3
%34 = OpTypePointer Private %5
%36 = OpConstant %11 1
%38 = OpTypePointer Output %5
%40 = OpConstant %11 0
%3 = OpFunction %1 None %2
%4 = OpLabel
OpBranch %41
%41 = OpLabel
%30 = OpLoad %5 %7
%31 = OpConvertFToS %11 %30
%32 = OpBitwiseAnd %11 %31 %33
%35 = OpAccessChain %34 %29 %32 %36
%37 = OpLoad %5 %35
%39 = OpAccessChain %38 %10 %40
OpStore %39 %37
OpReturn
OpFunctionEnd
#endif
