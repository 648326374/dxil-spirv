#version 460
#extension GL_EXT_buffer_reference : require
layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

struct AddCarry
{
    uint _m0;
    uint _m1;
};

layout(buffer_reference) buffer PhysicalPointerFloat4NonWrite;
layout(buffer_reference) buffer PhysicalPointerFloat4NonWriteCBVArray;
layout(buffer_reference) buffer PhysicalPointerFloat4Coherent;
layout(buffer_reference, std430) readonly buffer PhysicalPointerFloat4NonWrite
{
    vec4 value;
};

layout(buffer_reference, std430) readonly buffer PhysicalPointerFloat4NonWriteCBVArray
{
    vec4 value[4096];
};

layout(buffer_reference, std430) coherent buffer PhysicalPointerFloat4Coherent
{
    vec4 value;
};

layout(push_constant, std430) uniform RootConstants
{
    uvec2 _m0;
    uvec2 _m1;
    uvec2 _m2;
    uvec2 _m3;
} registers;

void main()
{
    AddCarry _36;
    _36._m0 = uaddCarry(registers._m1.x, (gl_GlobalInvocationID.x * 16u) + 0u, _36._m1);
    PhysicalPointerFloat4NonWrite _41 = PhysicalPointerFloat4NonWrite(uvec2(_36._m0, registers._m1.y + _36._m1));
    PhysicalPointerFloat4NonWriteCBVArray _53 = PhysicalPointerFloat4NonWriteCBVArray(registers._m0);
    AddCarry _70;
    _70._m0 = uaddCarry(registers._m2.x, (gl_GlobalInvocationID.x * 16u) + 0u, _70._m1);
    PhysicalPointerFloat4Coherent(uvec2(_70._m0, registers._m2.y + _70._m1)).value = vec4(_53.value[gl_GlobalInvocationID.x].x + _41.value.x, _53.value[gl_GlobalInvocationID.x].y + _41.value.y, _53.value[gl_GlobalInvocationID.x].z + _41.value.z, _53.value[gl_GlobalInvocationID.x].w + _41.value.w);
}


#if 0
// SPIR-V disassembly
; SPIR-V
; Version: 1.3
; Generator: Unknown(30017); 21022
; Bound: 80
; Schema: 0
OpCapability Shader
OpCapability PhysicalStorageBufferAddresses
OpExtension "SPV_KHR_physical_storage_buffer"
OpMemoryModel PhysicalStorageBuffer64 GLSL450
OpEntryPoint GLCompute %3 "main" %22
OpExecutionMode %3 LocalSize 1 1 1
OpName %3 "main"
OpName %7 "RootConstants"
OpName %9 "registers"
OpName %28 "PhysicalPointerFloat4NonWrite"
OpMemberName %28 0 "value"
OpName %35 "AddCarry"
OpName %51 "PhysicalPointerFloat4NonWriteCBVArray"
OpMemberName %51 0 "value"
OpName %64 "PhysicalPointerFloat4Coherent"
OpMemberName %64 0 "value"
OpDecorate %7 Block
OpMemberDecorate %7 0 Offset 0
OpMemberDecorate %7 1 Offset 8
OpMemberDecorate %7 2 Offset 16
OpMemberDecorate %7 3 Offset 24
OpDecorate %22 BuiltIn GlobalInvocationId
OpMemberDecorate %28 0 Offset 0
OpDecorate %28 Block
OpMemberDecorate %28 0 NonWritable
OpDecorate %50 ArrayStride 16
OpMemberDecorate %51 0 Offset 0
OpDecorate %51 Block
OpMemberDecorate %51 0 NonWritable
OpMemberDecorate %64 0 Offset 0
OpDecorate %64 Block
OpMemberDecorate %64 0 Coherent
%1 = OpTypeVoid
%2 = OpTypeFunction %1
%5 = OpTypeInt 32 0
%6 = OpTypeVector %5 2
%7 = OpTypeStruct %6 %6 %6 %6
%8 = OpTypePointer PushConstant %7
%9 = OpVariable %8 PushConstant
%10 = OpTypePointer PushConstant %6
%12 = OpConstant %5 2
%15 = OpConstant %5 1
%18 = OpConstant %5 0
%20 = OpTypeVector %5 3
%21 = OpTypePointer Input %20
%22 = OpVariable %21 Input
%23 = OpTypePointer Input %5
%26 = OpTypeFloat 32
%27 = OpTypeVector %26 4
%28 = OpTypeStruct %27
%29 = OpTypePointer PhysicalStorageBuffer %28
%31 = OpConstant %5 16
%35 = OpTypeStruct %5 %5
%42 = OpTypePointer PhysicalStorageBuffer %27
%49 = OpConstant %5 4096
%50 = OpTypeArray %27 %49
%51 = OpTypeStruct %50
%52 = OpTypePointer PhysicalStorageBuffer %51
%64 = OpTypeStruct %27
%65 = OpTypePointer PhysicalStorageBuffer %64
%3 = OpFunction %1 None %2
%4 = OpLabel
OpBranch %78
%78 = OpLabel
%11 = OpAccessChain %10 %9 %12
%13 = OpLoad %6 %11
%14 = OpAccessChain %10 %9 %15
%16 = OpLoad %6 %14
%17 = OpAccessChain %10 %9 %18
%19 = OpLoad %6 %17
%24 = OpAccessChain %23 %22 %18
%25 = OpLoad %5 %24
%30 = OpIMul %5 %25 %31
%32 = OpIAdd %5 %30 %18
%33 = OpCompositeExtract %5 %16 0
%34 = OpCompositeExtract %5 %16 1
%36 = OpIAddCarry %35 %33 %32
%37 = OpCompositeExtract %5 %36 0
%38 = OpCompositeExtract %5 %36 1
%39 = OpIAdd %5 %34 %38
%40 = OpCompositeConstruct %6 %37 %39
%41 = OpBitcast %29 %40
%43 = OpAccessChain %42 %41 %18
%44 = OpLoad %27 %43 Aligned 4
%45 = OpCompositeExtract %26 %44 0
%46 = OpCompositeExtract %26 %44 1
%47 = OpCompositeExtract %26 %44 2
%48 = OpCompositeExtract %26 %44 3
%53 = OpBitcast %52 %19
%54 = OpInBoundsAccessChain %42 %53 %18 %25
%55 = OpLoad %27 %54 Aligned 16
%56 = OpCompositeExtract %26 %55 0
%57 = OpCompositeExtract %26 %55 1
%58 = OpCompositeExtract %26 %55 2
%59 = OpCompositeExtract %26 %55 3
%60 = OpFAdd %26 %56 %45
%61 = OpFAdd %26 %57 %46
%62 = OpFAdd %26 %58 %47
%63 = OpFAdd %26 %59 %48
%66 = OpIMul %5 %25 %31
%67 = OpIAdd %5 %66 %18
%68 = OpCompositeExtract %5 %13 0
%69 = OpCompositeExtract %5 %13 1
%70 = OpIAddCarry %35 %68 %67
%71 = OpCompositeExtract %5 %70 0
%72 = OpCompositeExtract %5 %70 1
%73 = OpIAdd %5 %69 %72
%74 = OpCompositeConstruct %6 %71 %73
%75 = OpBitcast %65 %74
%76 = OpAccessChain %42 %75 %18
%77 = OpCompositeConstruct %27 %60 %61 %62 %63
OpStore %76 %77 Aligned 4
OpReturn
OpFunctionEnd
#endif
