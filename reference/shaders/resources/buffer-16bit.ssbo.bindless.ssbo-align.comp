#version 460
#extension GL_EXT_shader_explicit_arithmetic_types_int16 : require
#extension GL_EXT_shader_16bit_storage : require
#if defined(GL_AMD_gpu_shader_half_float)
#extension GL_AMD_gpu_shader_half_float : require
#elif defined(GL_EXT_shader_explicit_arithmetic_types_float16)
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : require
#else
#error No extension available for FP16.
#endif
#extension GL_EXT_buffer_reference : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_scalar_block_layout : require
#extension GL_KHR_shader_subgroup_ballot : require
layout(local_size_x = 64, local_size_y = 1, local_size_z = 1) in;

layout(set = 15, binding = 0, std430) restrict readonly buffer SSBO_Offsets
{
    uvec2 _m0[];
} _13;

layout(set = 4, binding = 0, std430) buffer SSBO
{
    uint16_t _m0[];
} _19[];

layout(set = 4, binding = 0, std430) buffer _22_25
{
    u16vec2 _m0[];
} _25[];

layout(set = 4, binding = 0, std430) buffer _28_31
{
    u16vec4 _m0[];
} _31[];

layout(set = 4, binding = 0, std430) buffer _33_36
{
    uint16_t _m0[];
} _36[];

layout(set = 4, binding = 0, std430) buffer _38_41
{
    u16vec2 _m0[];
} _41[];

layout(set = 4, binding = 0, scalar) buffer _44_47
{
    u16vec3 _m0[];
} _47[];

layout(set = 4, binding = 0, std430) buffer _49_52
{
    u16vec4 _m0[];
} _52[];

layout(set = 4, binding = 0, std430) buffer _54_57
{
    uint _m0[];
} _57[];

layout(set = 4, binding = 0, std430) buffer _60_63
{
    uvec4 _m0[];
} _63[];

layout(set = 4, binding = 0, std430) writeonly buffer _65_68
{
    uint16_t _m0[];
} _68[];

layout(set = 4, binding = 0, std430) writeonly buffer _70_73
{
    u16vec2 _m0[];
} _73[];

layout(set = 4, binding = 0, scalar) writeonly buffer _75_78
{
    u16vec3 _m0[];
} _78[];

layout(set = 4, binding = 0, std430) writeonly buffer _80_83
{
    u16vec4 _m0[];
} _83[];

layout(push_constant, std430) uniform RootConstants
{
    uint _m0;
    uint _m1;
    uint _m2;
    uint _m3;
    uint _m4;
    uint _m5;
    uint _m6;
    uint _m7;
} registers;

void main()
{
    uint _106 = registers._m4 + 6u;
    uint _107 = subgroupBroadcastFirst(_106);
    uint _129 = registers._m4 + 5u;
    uint _130 = subgroupBroadcastFirst(_129);
    uint _137 = registers._m4 + 4u;
    uint _142 = registers._m4 + 4u;
    uint _147 = registers._m4 + 4u;
    uint _152 = registers._m4 + 4u;
    uint _162 = registers._m4 + 4u;
    uint _163 = subgroupBroadcastFirst(_162);
    uint _170 = registers._m4 + 3u;
    uvec2 _174 = _13._m0[subgroupBroadcastFirst(_170)] >> uvec2(3u);
    uint _180 = registers._m4 + 2u;
    uvec2 _185 = _13._m0[subgroupBroadcastFirst(_180)] >> uvec2(1u);
    uint _192 = registers._m4 + 1u;
    uvec2 _196 = _13._m0[subgroupBroadcastFirst(_192)] >> uvec2(2u);
    uvec2 _204 = _13._m0[subgroupBroadcastFirst(registers._m4)] >> uvec2(1u);
    _19[registers._m4]._m0[(gl_GlobalInvocationID.x < _204.y) ? (gl_GlobalInvocationID.x + _204.x) : 2147483644u] = float16BitsToUint16(uint16BitsToFloat16(_19[registers._m4]._m0[(gl_GlobalInvocationID.x < _204.y) ? (gl_GlobalInvocationID.x + _204.x) : 2147483644u]) + float16_t(1.0));
    uint _236 = (gl_GlobalInvocationID.x < _196.y) ? (gl_GlobalInvocationID.x + _196.x) : 1073741823u;
    _25[_192]._m0[(gl_GlobalInvocationID.x < _196.y) ? (gl_GlobalInvocationID.x + _196.x) : 1073741823u] = u16vec2(_25[_192]._m0[_236].x + 2us, _25[_192]._m0[_236].y + 2us);
    uint _253 = gl_GlobalInvocationID.x * 3u;
    uint _258 = (_253 < _185.y) ? (_253 + _185.x) : 2147483644u;
    uint16_t _260 = _19[_180]._m0[_258];
    uint16_t _263 = _19[_180]._m0[_258 + 1u];
    uint16_t _266 = _19[_180]._m0[_258 + 2u];
    f16vec3 _269 = uint16BitsToFloat16(u16vec3(_260, _263, _266));
    uint _277 = gl_GlobalInvocationID.x * 3u;
    uint _282 = (_277 < _185.y) ? (_277 + _185.x) : 2147483644u;
    _19[_180]._m0[_282] = float16BitsToUint16(_269.x + float16_t(3.0));
    _19[_180]._m0[_282 + 1u] = float16BitsToUint16(_269.y + float16_t(3.0));
    _19[_180]._m0[_282 + 2u] = float16BitsToUint16(_269.z + float16_t(3.0));
    uint _295 = (gl_GlobalInvocationID.x < _174.y) ? (gl_GlobalInvocationID.x + _174.x) : 536870911u;
    _31[_170]._m0[(gl_GlobalInvocationID.x < _174.y) ? (gl_GlobalInvocationID.x + _174.x) : 536870911u] = u16vec4(_31[_170]._m0[_295].x + 4us, _31[_170]._m0[_295].y + 4us, _31[_170]._m0[_295].z + 4us, _31[_170]._m0[_295].w + 4us);
    uvec2 _317 = _13._m0[_163] >> uvec2(1u);
    uint16_t _324 = _36[_137]._m0[(gl_GlobalInvocationID.x < _317.y) ? (gl_GlobalInvocationID.x + _317.x) : 2147483644u];
    float _327 = float(uint16BitsToFloat16(_324));
    uvec2 _329 = _13._m0[_163] >> uvec2(2u);
    u16vec2 _336 = _41[_142]._m0[(gl_GlobalInvocationID.x < _329.y) ? (gl_GlobalInvocationID.x + _329.x) : 1073741823u];
    f16vec2 _338 = uint16BitsToFloat16(_336);
    float _342 = float(_338.y);
    float _343 = float(_338.x) + _327;
    uvec2 _346 = _13._m0[_163] >> uvec2(1u);
    u16vec3 _355 = _47[_147]._m0[(gl_GlobalInvocationID.x < _346.y) ? (gl_GlobalInvocationID.x + _346.x) : 2147483647u];
    f16vec3 _356 = uint16BitsToFloat16(_355);
    float _360 = float(_356.x);
    uvec2 _367 = _13._m0[_163] >> uvec2(3u);
    u16vec4 _374 = _52[_152]._m0[(gl_GlobalInvocationID.x < _367.y) ? (gl_GlobalInvocationID.x + _367.x) : 536870911u];
    f16vec4 _376 = uint16BitsToFloat16(_374);
    uvec2 _388 = _13._m0[_163] >> uvec2(1u);
    uint16_t _395 = _36[_137]._m0[(gl_GlobalInvocationID.x < _388.y) ? (gl_GlobalInvocationID.x + _388.x) : 2147483644u];
    float _396 = float(_395);
    uvec2 _400 = _13._m0[_163] >> uvec2(2u);
    uint _405 = (gl_GlobalInvocationID.x < _400.y) ? (gl_GlobalInvocationID.x + _400.x) : 1073741823u;
    u16vec2 _407 = _41[_142]._m0[_405];
    float _410 = float(_407.x);
    float _411 = float(_407.y);
    uvec2 _415 = _13._m0[_163] >> uvec2(1u);
    uint _420 = (gl_GlobalInvocationID.x < _415.y) ? (gl_GlobalInvocationID.x + _415.x) : 2147483647u;
    u16vec3 _422 = _47[_147]._m0[_420];
    float _426 = float(_422.x);
    uvec2 _432 = _13._m0[_163] >> uvec2(3u);
    uint _437 = (gl_GlobalInvocationID.x < _432.y) ? (gl_GlobalInvocationID.x + _432.x) : 536870911u;
    u16vec4 _439 = _52[_152]._m0[_437];
    uvec2 _451 = _13._m0[_130] >> uvec2(1u);
    _68[registers._m4 + 5u]._m0[(gl_GlobalInvocationID.x < _451.y) ? (gl_GlobalInvocationID.x + _451.x) : 2147483644u] = float16BitsToUint16(float16_t(1.0));
    uvec2 _459 = _13._m0[_130] >> uvec2(2u);
    _73[registers._m4 + 5u]._m0[(gl_GlobalInvocationID.x < _459.y) ? (gl_GlobalInvocationID.x + _459.x) : 1073741823u] = u16vec2(float16BitsToUint16(float16_t(2.0)), float16BitsToUint16(float16_t(4.0)));
    uvec2 _471 = _13._m0[_130] >> uvec2(1u);
    _78[registers._m4 + 5u]._m0[(gl_GlobalInvocationID.x < _471.y) ? (gl_GlobalInvocationID.x + _471.x) : 2147483647u] = u16vec3(float16BitsToUint16(float16_t(4.0)), float16BitsToUint16(float16_t(5.0)), float16BitsToUint16(float16_t(6.0)));
    uvec2 _484 = _13._m0[_130] >> uvec2(3u);
    _83[_129]._m0[(gl_GlobalInvocationID.x < _484.y) ? (gl_GlobalInvocationID.x + _484.x) : 536870911u] = u16vec4(float16BitsToUint16(float16_t(7.0)), float16BitsToUint16(float16_t(8.0)), float16BitsToUint16(float16_t(9.0)), float16BitsToUint16(float16_t(10.0)));
    uvec2 _500 = _13._m0[_107] >> uvec2(1u);
    _68[registers._m4 + 6u]._m0[(gl_GlobalInvocationID.x < _500.y) ? (gl_GlobalInvocationID.x + _500.x) : 2147483644u] = 1us;
    uvec2 _508 = _13._m0[_107] >> uvec2(2u);
    _73[registers._m4 + 6u]._m0[(gl_GlobalInvocationID.x < _508.y) ? (gl_GlobalInvocationID.x + _508.x) : 1073741823u] = u16vec2(2us, 4us);
    uvec2 _516 = _13._m0[_107] >> uvec2(1u);
    _78[registers._m4 + 6u]._m0[(gl_GlobalInvocationID.x < _516.y) ? (gl_GlobalInvocationID.x + _516.x) : 2147483647u] = u16vec3(4us, 5us, 6us);
    uvec2 _526 = _13._m0[_107] >> uvec2(3u);
    _83[_106]._m0[(gl_GlobalInvocationID.x < _526.y) ? (gl_GlobalInvocationID.x + _526.x) : 536870911u] = u16vec4(7us, 8us, 9us, 10us);
    uvec2 _538 = _13._m0[_163] >> uvec2(2u);
    uint _547 = _57[registers._m4 + 4u]._m0[(gl_GlobalInvocationID.x < _538.y) ? (gl_GlobalInvocationID.x + _538.x) : 1073741820u];
    float _548 = uintBitsToFloat(_547);
    uint _552 = gl_GlobalInvocationID.x + 0u;
    uint _560 = registers._m4 + _552;
    uint _563 = gl_GlobalInvocationID.x * 2u;
    uvec2 _564 = _13._m0[_560] >> uvec2(1u);
    uint16_t _571 = _36[nonuniformEXT(registers._m4 + _552)]._m0[(_563 < _564.y) ? (_563 + _564.x) : 2147483644u];
    float _573 = float(uint16BitsToFloat16(_571));
    float _574 = (((((((_343 + _360) + float(_376.x)) + _396) + _410) + _426) + float(_439.x)) + _548) + _573;
    float _575 = (((((((_343 + float(_356.y)) + float(_376.y)) + _396) + _410) + float(_422.y)) + float(_439.y)) + _548) + _573;
    uint _579 = gl_GlobalInvocationID.x * 2u;
    uvec2 _580 = _13._m0[_560] >> uvec2(2u);
    _41[nonuniformEXT(_560)]._m0[(_579 < _580.y) ? (_579 + _580.x) : 1073741823u] = u16vec2(float16BitsToUint16(float16_t(_574)), float16BitsToUint16(float16_t(_575)));
    uvec2 _621 = _13._m0[_163] >> uvec2(4u);
    _63[_162]._m0[(gl_GlobalInvocationID.x < _621.y) ? (gl_GlobalInvocationID.x + _621.x) : 268435455u] = uvec4(uint((float(_204.y / 1u) + _574) + float(_13._m0[_130].y * 8u)), uint(_575 + 2.0), uint((((((((((_342 + _327) + float(_356.z)) + float(_376.z)) + _396) + _411) + float(_422.z)) + float(_439.z)) + _548) + _573) + float(_174.y / 1u)), uint((((((((((_327 + 8.0) + _342) + _360) + float(_376.w)) + _396) + _411) + _426) + float(_439.w)) + _548) + _573));
}


#if 0
// SPIR-V disassembly
; SPIR-V
; Version: 1.3
; Generator: Unknown(30017); 21022
; Bound: 634
; Schema: 0
OpCapability Shader
OpCapability Float16
OpCapability Int16
OpCapability StorageBufferArrayDynamicIndexing
OpCapability ImageQuery
OpCapability GroupNonUniformBallot
OpCapability StorageBuffer16BitAccess
OpCapability RuntimeDescriptorArray
OpCapability StorageBufferArrayNonUniformIndexing
OpCapability PhysicalStorageBufferAddresses
OpExtension "SPV_EXT_descriptor_indexing"
OpExtension "SPV_KHR_physical_storage_buffer"
OpMemoryModel PhysicalStorageBuffer64 GLSL450
OpEntryPoint GLCompute %3 "main" %207
OpExecutionMode %3 LocalSize 64 1 1
OpName %3 "main"
OpName %6 "RootConstants"
OpName %8 "registers"
OpName %11 "SSBO_Offsets"
OpName %16 "SSBO"
OpName %22 "SSBO"
OpName %28 "SSBO"
OpName %33 "SSBO"
OpName %38 "SSBO"
OpName %44 "SSBO"
OpName %49 "SSBO"
OpName %54 "SSBO"
OpName %60 "SSBO"
OpName %65 "SSBO"
OpName %70 "SSBO"
OpName %75 "SSBO"
OpName %80 "SSBO"
OpDecorate %6 Block
OpMemberDecorate %6 0 Offset 0
OpMemberDecorate %6 1 Offset 4
OpMemberDecorate %6 2 Offset 8
OpMemberDecorate %6 3 Offset 12
OpMemberDecorate %6 4 Offset 16
OpMemberDecorate %6 5 Offset 20
OpMemberDecorate %6 6 Offset 24
OpMemberDecorate %6 7 Offset 28
OpDecorate %10 ArrayStride 8
OpMemberDecorate %11 0 Offset 0
OpDecorate %11 Block
OpDecorate %13 DescriptorSet 15
OpDecorate %13 Binding 0
OpDecorate %13 NonWritable
OpDecorate %13 Restrict
OpDecorate %15 ArrayStride 2
OpMemberDecorate %16 0 Offset 0
OpDecorate %16 Block
OpDecorate %19 DescriptorSet 4
OpDecorate %19 Binding 0
OpDecorate %21 ArrayStride 4
OpMemberDecorate %22 0 Offset 0
OpDecorate %22 Block
OpDecorate %25 DescriptorSet 4
OpDecorate %25 Binding 0
OpDecorate %27 ArrayStride 8
OpMemberDecorate %28 0 Offset 0
OpDecorate %28 Block
OpDecorate %31 DescriptorSet 4
OpDecorate %31 Binding 0
OpDecorate %32 ArrayStride 2
OpMemberDecorate %33 0 Offset 0
OpDecorate %33 Block
OpDecorate %36 DescriptorSet 4
OpDecorate %36 Binding 0
OpDecorate %36 Aliased
OpDecorate %37 ArrayStride 4
OpMemberDecorate %38 0 Offset 0
OpDecorate %38 Block
OpDecorate %41 DescriptorSet 4
OpDecorate %41 Binding 0
OpDecorate %41 Aliased
OpDecorate %43 ArrayStride 6
OpMemberDecorate %44 0 Offset 0
OpDecorate %44 Block
OpDecorate %47 DescriptorSet 4
OpDecorate %47 Binding 0
OpDecorate %47 Aliased
OpDecorate %48 ArrayStride 8
OpMemberDecorate %49 0 Offset 0
OpDecorate %49 Block
OpDecorate %52 DescriptorSet 4
OpDecorate %52 Binding 0
OpDecorate %52 Aliased
OpDecorate %53 ArrayStride 4
OpMemberDecorate %54 0 Offset 0
OpDecorate %54 Block
OpDecorate %57 DescriptorSet 4
OpDecorate %57 Binding 0
OpDecorate %57 Aliased
OpDecorate %59 ArrayStride 16
OpMemberDecorate %60 0 Offset 0
OpDecorate %60 Block
OpDecorate %63 DescriptorSet 4
OpDecorate %63 Binding 0
OpDecorate %63 Aliased
OpDecorate %64 ArrayStride 2
OpMemberDecorate %65 0 Offset 0
OpDecorate %65 Block
OpDecorate %68 DescriptorSet 4
OpDecorate %68 Binding 0
OpDecorate %68 NonReadable
OpDecorate %68 Aliased
OpDecorate %69 ArrayStride 4
OpMemberDecorate %70 0 Offset 0
OpDecorate %70 Block
OpDecorate %73 DescriptorSet 4
OpDecorate %73 Binding 0
OpDecorate %73 NonReadable
OpDecorate %73 Aliased
OpDecorate %74 ArrayStride 6
OpMemberDecorate %75 0 Offset 0
OpDecorate %75 Block
OpDecorate %78 DescriptorSet 4
OpDecorate %78 Binding 0
OpDecorate %78 NonReadable
OpDecorate %78 Aliased
OpDecorate %79 ArrayStride 8
OpMemberDecorate %80 0 Offset 0
OpDecorate %80 Block
OpDecorate %83 DescriptorSet 4
OpDecorate %83 Binding 0
OpDecorate %83 NonReadable
OpDecorate %83 Aliased
OpDecorate %207 BuiltIn GlobalInvocationId
OpDecorate %556 NonUniform
OpDecorate %553 NonUniform
OpDecorate %560 NonUniform
OpDecorate %557 NonUniform
OpDecorate %570 NonUniform
OpDecorate %589 NonUniform
%1 = OpTypeVoid
%2 = OpTypeFunction %1
%5 = OpTypeInt 32 0
%6 = OpTypeStruct %5 %5 %5 %5 %5 %5 %5 %5
%7 = OpTypePointer PushConstant %6
%8 = OpVariable %7 PushConstant
%9 = OpTypeVector %5 2
%10 = OpTypeRuntimeArray %9
%11 = OpTypeStruct %10
%12 = OpTypePointer StorageBuffer %11
%13 = OpVariable %12 StorageBuffer
%14 = OpTypeInt 16 0
%15 = OpTypeRuntimeArray %14
%16 = OpTypeStruct %15
%17 = OpTypeRuntimeArray %16
%18 = OpTypePointer StorageBuffer %17
%19 = OpVariable %18 StorageBuffer
%20 = OpTypeVector %14 2
%21 = OpTypeRuntimeArray %20
%22 = OpTypeStruct %21
%23 = OpTypeRuntimeArray %22
%24 = OpTypePointer StorageBuffer %23
%25 = OpVariable %24 StorageBuffer
%26 = OpTypeVector %14 4
%27 = OpTypeRuntimeArray %26
%28 = OpTypeStruct %27
%29 = OpTypeRuntimeArray %28
%30 = OpTypePointer StorageBuffer %29
%31 = OpVariable %30 StorageBuffer
%32 = OpTypeRuntimeArray %14
%33 = OpTypeStruct %32
%34 = OpTypeRuntimeArray %33
%35 = OpTypePointer StorageBuffer %34
%36 = OpVariable %35 StorageBuffer
%37 = OpTypeRuntimeArray %20
%38 = OpTypeStruct %37
%39 = OpTypeRuntimeArray %38
%40 = OpTypePointer StorageBuffer %39
%41 = OpVariable %40 StorageBuffer
%42 = OpTypeVector %14 3
%43 = OpTypeRuntimeArray %42
%44 = OpTypeStruct %43
%45 = OpTypeRuntimeArray %44
%46 = OpTypePointer StorageBuffer %45
%47 = OpVariable %46 StorageBuffer
%48 = OpTypeRuntimeArray %26
%49 = OpTypeStruct %48
%50 = OpTypeRuntimeArray %49
%51 = OpTypePointer StorageBuffer %50
%52 = OpVariable %51 StorageBuffer
%53 = OpTypeRuntimeArray %5
%54 = OpTypeStruct %53
%55 = OpTypeRuntimeArray %54
%56 = OpTypePointer StorageBuffer %55
%57 = OpVariable %56 StorageBuffer
%58 = OpTypeVector %5 4
%59 = OpTypeRuntimeArray %58
%60 = OpTypeStruct %59
%61 = OpTypeRuntimeArray %60
%62 = OpTypePointer StorageBuffer %61
%63 = OpVariable %62 StorageBuffer
%64 = OpTypeRuntimeArray %14
%65 = OpTypeStruct %64
%66 = OpTypeRuntimeArray %65
%67 = OpTypePointer StorageBuffer %66
%68 = OpVariable %67 StorageBuffer
%69 = OpTypeRuntimeArray %20
%70 = OpTypeStruct %69
%71 = OpTypeRuntimeArray %70
%72 = OpTypePointer StorageBuffer %71
%73 = OpVariable %72 StorageBuffer
%74 = OpTypeRuntimeArray %42
%75 = OpTypeStruct %74
%76 = OpTypeRuntimeArray %75
%77 = OpTypePointer StorageBuffer %76
%78 = OpVariable %77 StorageBuffer
%79 = OpTypeRuntimeArray %26
%80 = OpTypeStruct %79
%81 = OpTypeRuntimeArray %80
%82 = OpTypePointer StorageBuffer %81
%83 = OpVariable %82 StorageBuffer
%84 = OpTypePointer StorageBuffer %65
%86 = OpTypePointer PushConstant %5
%88 = OpConstant %5 4
%91 = OpConstant %5 6
%92 = OpTypePointer StorageBuffer %70
%97 = OpTypePointer StorageBuffer %75
%102 = OpTypePointer StorageBuffer %80
%108 = OpConstant %5 3
%109 = OpTypePointer StorageBuffer %9
%111 = OpConstant %5 0
%117 = OpConstant %5 5
%133 = OpTypePointer StorageBuffer %33
%138 = OpTypePointer StorageBuffer %38
%143 = OpTypePointer StorageBuffer %44
%148 = OpTypePointer StorageBuffer %49
%153 = OpTypePointer StorageBuffer %54
%158 = OpTypePointer StorageBuffer %60
%166 = OpTypePointer StorageBuffer %28
%175 = OpConstantComposite %9 %108 %108
%176 = OpTypePointer StorageBuffer %16
%181 = OpConstant %5 2
%186 = OpConstant %5 1
%187 = OpConstantComposite %9 %186 %186
%188 = OpTypePointer StorageBuffer %22
%197 = OpConstantComposite %9 %181 %181
%205 = OpTypeVector %5 3
%206 = OpTypePointer Input %205
%207 = OpVariable %206 Input
%208 = OpTypePointer Input %5
%214 = OpTypeBool
%217 = OpConstant %5 2147483644
%218 = OpTypePointer StorageBuffer %14
%221 = OpTypeFloat 16
%224 = OpConstant %221 0x1p+0
%237 = OpConstant %5 1073741823
%238 = OpTypePointer StorageBuffer %20
%244 = OpConstant %14 2
%268 = OpTypeVector %221 3
%274 = OpConstant %221 0x1.8p+1
%296 = OpConstant %5 536870911
%297 = OpTypePointer StorageBuffer %26
%305 = OpConstant %14 4
%326 = OpTypeFloat 32
%337 = OpTypeVector %221 2
%352 = OpConstant %5 2147483647
%353 = OpTypePointer StorageBuffer %42
%375 = OpTypeVector %221 4
%465 = OpConstant %221 0x1p+1
%467 = OpConstant %221 0x1p+2
%478 = OpConstant %221 0x1.4p+2
%480 = OpConstant %221 0x1.8p+2
%490 = OpConstant %221 0x1.cp+2
%492 = OpConstant %221 0x1p+3
%494 = OpConstant %221 0x1.2p+3
%496 = OpConstant %221 0x1.4p+3
%506 = OpConstant %14 1
%522 = OpConstant %14 5
%523 = OpConstant %14 6
%532 = OpConstant %14 7
%533 = OpConstant %14 8
%534 = OpConstant %14 9
%535 = OpConstant %14 10
%544 = OpConstant %5 1073741820
%545 = OpTypePointer StorageBuffer %5
%595 = OpConstant %326 2
%601 = OpConstant %326 8
%613 = OpConstant %5 8
%622 = OpConstantComposite %9 %88 %88
%628 = OpConstant %5 268435455
%630 = OpTypePointer StorageBuffer %58
%3 = OpFunction %1 None %2
%4 = OpLabel
OpBranch %632
%632 = OpLabel
%87 = OpAccessChain %86 %8 %88
%89 = OpLoad %5 %87
%90 = OpIAdd %5 %89 %91
%85 = OpAccessChain %84 %68 %90
%94 = OpAccessChain %86 %8 %88
%95 = OpLoad %5 %94
%96 = OpIAdd %5 %95 %91
%93 = OpAccessChain %92 %73 %96
%99 = OpAccessChain %86 %8 %88
%100 = OpLoad %5 %99
%101 = OpIAdd %5 %100 %91
%98 = OpAccessChain %97 %78 %101
%104 = OpAccessChain %86 %8 %88
%105 = OpLoad %5 %104
%106 = OpIAdd %5 %105 %91
%103 = OpAccessChain %102 %83 %106
%107 = OpGroupNonUniformBroadcastFirst %5 %108 %106
%110 = OpAccessChain %109 %13 %111 %107
%112 = OpLoad %9 %110
%114 = OpAccessChain %86 %8 %88
%115 = OpLoad %5 %114
%116 = OpIAdd %5 %115 %117
%113 = OpAccessChain %84 %68 %116
%119 = OpAccessChain %86 %8 %88
%120 = OpLoad %5 %119
%121 = OpIAdd %5 %120 %117
%118 = OpAccessChain %92 %73 %121
%123 = OpAccessChain %86 %8 %88
%124 = OpLoad %5 %123
%125 = OpIAdd %5 %124 %117
%122 = OpAccessChain %97 %78 %125
%127 = OpAccessChain %86 %8 %88
%128 = OpLoad %5 %127
%129 = OpIAdd %5 %128 %117
%126 = OpAccessChain %102 %83 %129
%130 = OpGroupNonUniformBroadcastFirst %5 %108 %129
%131 = OpAccessChain %109 %13 %111 %130
%132 = OpLoad %9 %131
%135 = OpAccessChain %86 %8 %88
%136 = OpLoad %5 %135
%137 = OpIAdd %5 %136 %88
%134 = OpAccessChain %133 %36 %137
%140 = OpAccessChain %86 %8 %88
%141 = OpLoad %5 %140
%142 = OpIAdd %5 %141 %88
%139 = OpAccessChain %138 %41 %142
%145 = OpAccessChain %86 %8 %88
%146 = OpLoad %5 %145
%147 = OpIAdd %5 %146 %88
%144 = OpAccessChain %143 %47 %147
%150 = OpAccessChain %86 %8 %88
%151 = OpLoad %5 %150
%152 = OpIAdd %5 %151 %88
%149 = OpAccessChain %148 %52 %152
%155 = OpAccessChain %86 %8 %88
%156 = OpLoad %5 %155
%157 = OpIAdd %5 %156 %88
%154 = OpAccessChain %153 %57 %157
%160 = OpAccessChain %86 %8 %88
%161 = OpLoad %5 %160
%162 = OpIAdd %5 %161 %88
%159 = OpAccessChain %158 %63 %162
%163 = OpGroupNonUniformBroadcastFirst %5 %108 %162
%164 = OpAccessChain %109 %13 %111 %163
%165 = OpLoad %9 %164
%168 = OpAccessChain %86 %8 %88
%169 = OpLoad %5 %168
%170 = OpIAdd %5 %169 %108
%167 = OpAccessChain %166 %31 %170
%171 = OpGroupNonUniformBroadcastFirst %5 %108 %170
%172 = OpAccessChain %109 %13 %111 %171
%173 = OpLoad %9 %172
%174 = OpShiftRightLogical %9 %173 %175
%178 = OpAccessChain %86 %8 %88
%179 = OpLoad %5 %178
%180 = OpIAdd %5 %179 %181
%177 = OpAccessChain %176 %19 %180
%182 = OpGroupNonUniformBroadcastFirst %5 %108 %180
%183 = OpAccessChain %109 %13 %111 %182
%184 = OpLoad %9 %183
%185 = OpShiftRightLogical %9 %184 %187
%190 = OpAccessChain %86 %8 %88
%191 = OpLoad %5 %190
%192 = OpIAdd %5 %191 %186
%189 = OpAccessChain %188 %25 %192
%193 = OpGroupNonUniformBroadcastFirst %5 %108 %192
%194 = OpAccessChain %109 %13 %111 %193
%195 = OpLoad %9 %194
%196 = OpShiftRightLogical %9 %195 %197
%199 = OpAccessChain %86 %8 %88
%200 = OpLoad %5 %199
%198 = OpAccessChain %176 %19 %200
%201 = OpGroupNonUniformBroadcastFirst %5 %108 %200
%202 = OpAccessChain %109 %13 %111 %201
%203 = OpLoad %9 %202
%204 = OpShiftRightLogical %9 %203 %187
%209 = OpAccessChain %208 %207 %111
%210 = OpLoad %5 %209
%211 = OpCompositeExtract %5 %204 0
%212 = OpCompositeExtract %5 %204 1
%213 = OpIAdd %5 %210 %211
%215 = OpULessThan %214 %210 %212
%216 = OpSelect %5 %215 %213 %217
%219 = OpAccessChain %218 %198 %111 %216
%220 = OpLoad %14 %219
%222 = OpBitcast %221 %220
%223 = OpFAdd %221 %222 %224
%225 = OpCompositeExtract %5 %204 0
%226 = OpCompositeExtract %5 %204 1
%227 = OpIAdd %5 %210 %225
%228 = OpULessThan %214 %210 %226
%229 = OpSelect %5 %228 %227 %217
%230 = OpBitcast %14 %223
%231 = OpAccessChain %218 %198 %111 %229
OpStore %231 %230
%232 = OpCompositeExtract %5 %196 0
%233 = OpCompositeExtract %5 %196 1
%234 = OpIAdd %5 %210 %232
%235 = OpULessThan %214 %210 %233
%236 = OpSelect %5 %235 %234 %237
%239 = OpAccessChain %238 %189 %111 %236
%240 = OpLoad %20 %239
%241 = OpCompositeExtract %14 %240 0
%242 = OpCompositeExtract %14 %240 1
%243 = OpIAdd %14 %241 %244
%245 = OpIAdd %14 %242 %244
%246 = OpCompositeExtract %5 %196 0
%247 = OpCompositeExtract %5 %196 1
%248 = OpIAdd %5 %210 %246
%249 = OpULessThan %214 %210 %247
%250 = OpSelect %5 %249 %248 %237
%251 = OpCompositeConstruct %20 %243 %245
%252 = OpAccessChain %238 %189 %111 %250
OpStore %252 %251
%253 = OpIMul %5 %210 %108
%254 = OpCompositeExtract %5 %185 0
%255 = OpCompositeExtract %5 %185 1
%256 = OpIAdd %5 %253 %254
%257 = OpULessThan %214 %253 %255
%258 = OpSelect %5 %257 %256 %217
%259 = OpAccessChain %218 %177 %111 %258
%260 = OpLoad %14 %259
%262 = OpIAdd %5 %258 %186
%261 = OpAccessChain %218 %177 %111 %262
%263 = OpLoad %14 %261
%265 = OpIAdd %5 %258 %181
%264 = OpAccessChain %218 %177 %111 %265
%266 = OpLoad %14 %264
%267 = OpCompositeConstruct %42 %260 %263 %266
%269 = OpBitcast %268 %267
%270 = OpCompositeExtract %221 %269 0
%271 = OpCompositeExtract %221 %269 1
%272 = OpCompositeExtract %221 %269 2
%273 = OpFAdd %221 %270 %274
%275 = OpFAdd %221 %271 %274
%276 = OpFAdd %221 %272 %274
%277 = OpIMul %5 %210 %108
%278 = OpCompositeExtract %5 %185 0
%279 = OpCompositeExtract %5 %185 1
%280 = OpIAdd %5 %277 %278
%281 = OpULessThan %214 %277 %279
%282 = OpSelect %5 %281 %280 %217
%283 = OpBitcast %14 %273
%284 = OpBitcast %14 %275
%285 = OpBitcast %14 %276
%286 = OpAccessChain %218 %177 %111 %282
OpStore %286 %283
%288 = OpIAdd %5 %282 %186
%287 = OpAccessChain %218 %177 %111 %288
OpStore %287 %284
%290 = OpIAdd %5 %282 %181
%289 = OpAccessChain %218 %177 %111 %290
OpStore %289 %285
%291 = OpCompositeExtract %5 %174 0
%292 = OpCompositeExtract %5 %174 1
%293 = OpIAdd %5 %210 %291
%294 = OpULessThan %214 %210 %292
%295 = OpSelect %5 %294 %293 %296
%298 = OpAccessChain %297 %167 %111 %295
%299 = OpLoad %26 %298
%300 = OpCompositeExtract %14 %299 0
%301 = OpCompositeExtract %14 %299 1
%302 = OpCompositeExtract %14 %299 2
%303 = OpCompositeExtract %14 %299 3
%304 = OpIAdd %14 %300 %305
%306 = OpIAdd %14 %301 %305
%307 = OpIAdd %14 %302 %305
%308 = OpIAdd %14 %303 %305
%309 = OpCompositeExtract %5 %174 0
%310 = OpCompositeExtract %5 %174 1
%311 = OpIAdd %5 %210 %309
%312 = OpULessThan %214 %210 %310
%313 = OpSelect %5 %312 %311 %296
%314 = OpCompositeConstruct %26 %304 %306 %307 %308
%315 = OpAccessChain %297 %167 %111 %313
OpStore %315 %314
%316 = OpShiftLeftLogical %5 %210 %186
%317 = OpShiftRightLogical %9 %165 %187
%318 = OpCompositeExtract %5 %317 0
%319 = OpCompositeExtract %5 %317 1
%320 = OpIAdd %5 %210 %318
%321 = OpULessThan %214 %210 %319
%322 = OpSelect %5 %321 %320 %217
%323 = OpAccessChain %218 %134 %111 %322
%324 = OpLoad %14 %323
%325 = OpBitcast %221 %324
%327 = OpFConvert %326 %325
%328 = OpShiftLeftLogical %5 %210 %181
%329 = OpShiftRightLogical %9 %165 %197
%330 = OpCompositeExtract %5 %329 0
%331 = OpCompositeExtract %5 %329 1
%332 = OpIAdd %5 %210 %330
%333 = OpULessThan %214 %210 %331
%334 = OpSelect %5 %333 %332 %237
%335 = OpAccessChain %238 %139 %111 %334
%336 = OpLoad %20 %335
%338 = OpBitcast %337 %336
%339 = OpCompositeExtract %221 %338 0
%340 = OpCompositeExtract %221 %338 1
%341 = OpFConvert %326 %339
%342 = OpFConvert %326 %340
%343 = OpFAdd %326 %341 %327
%344 = OpFAdd %326 %342 %327
%345 = OpIMul %5 %210 %91
%346 = OpShiftRightLogical %9 %165 %187
%347 = OpCompositeExtract %5 %346 0
%348 = OpCompositeExtract %5 %346 1
%349 = OpIAdd %5 %210 %347
%350 = OpULessThan %214 %210 %348
%351 = OpSelect %5 %350 %349 %352
%354 = OpAccessChain %353 %144 %111 %351
%355 = OpLoad %42 %354
%356 = OpBitcast %268 %355
%357 = OpCompositeExtract %221 %356 0
%358 = OpCompositeExtract %221 %356 1
%359 = OpCompositeExtract %221 %356 2
%360 = OpFConvert %326 %357
%361 = OpFConvert %326 %358
%362 = OpFConvert %326 %359
%363 = OpFAdd %326 %343 %360
%364 = OpFAdd %326 %343 %361
%365 = OpFAdd %326 %344 %362
%366 = OpShiftLeftLogical %5 %210 %108
%367 = OpShiftRightLogical %9 %165 %175
%368 = OpCompositeExtract %5 %367 0
%369 = OpCompositeExtract %5 %367 1
%370 = OpIAdd %5 %210 %368
%371 = OpULessThan %214 %210 %369
%372 = OpSelect %5 %371 %370 %296
%373 = OpAccessChain %297 %149 %111 %372
%374 = OpLoad %26 %373
%376 = OpBitcast %375 %374
%377 = OpCompositeExtract %221 %376 0
%378 = OpCompositeExtract %221 %376 1
%379 = OpCompositeExtract %221 %376 2
%380 = OpCompositeExtract %221 %376 3
%381 = OpFConvert %326 %377
%382 = OpFConvert %326 %378
%383 = OpFConvert %326 %379
%384 = OpFConvert %326 %380
%385 = OpFAdd %326 %363 %381
%386 = OpFAdd %326 %364 %382
%387 = OpFAdd %326 %365 %383
%388 = OpShiftRightLogical %9 %165 %187
%389 = OpCompositeExtract %5 %388 0
%390 = OpCompositeExtract %5 %388 1
%391 = OpIAdd %5 %210 %389
%392 = OpULessThan %214 %210 %390
%393 = OpSelect %5 %392 %391 %217
%394 = OpAccessChain %218 %134 %111 %393
%395 = OpLoad %14 %394
%396 = OpConvertUToF %326 %395
%397 = OpFAdd %326 %385 %396
%398 = OpFAdd %326 %386 %396
%399 = OpFAdd %326 %387 %396
%400 = OpShiftRightLogical %9 %165 %197
%401 = OpCompositeExtract %5 %400 0
%402 = OpCompositeExtract %5 %400 1
%403 = OpIAdd %5 %210 %401
%404 = OpULessThan %214 %210 %402
%405 = OpSelect %5 %404 %403 %237
%406 = OpAccessChain %238 %139 %111 %405
%407 = OpLoad %20 %406
%408 = OpCompositeExtract %14 %407 0
%409 = OpCompositeExtract %14 %407 1
%410 = OpConvertUToF %326 %408
%411 = OpConvertUToF %326 %409
%412 = OpFAdd %326 %397 %410
%413 = OpFAdd %326 %398 %410
%414 = OpFAdd %326 %399 %411
%415 = OpShiftRightLogical %9 %165 %187
%416 = OpCompositeExtract %5 %415 0
%417 = OpCompositeExtract %5 %415 1
%418 = OpIAdd %5 %210 %416
%419 = OpULessThan %214 %210 %417
%420 = OpSelect %5 %419 %418 %352
%421 = OpAccessChain %353 %144 %111 %420
%422 = OpLoad %42 %421
%423 = OpCompositeExtract %14 %422 0
%424 = OpCompositeExtract %14 %422 1
%425 = OpCompositeExtract %14 %422 2
%426 = OpConvertUToF %326 %423
%427 = OpConvertUToF %326 %424
%428 = OpConvertUToF %326 %425
%429 = OpFAdd %326 %412 %426
%430 = OpFAdd %326 %413 %427
%431 = OpFAdd %326 %414 %428
%432 = OpShiftRightLogical %9 %165 %175
%433 = OpCompositeExtract %5 %432 0
%434 = OpCompositeExtract %5 %432 1
%435 = OpIAdd %5 %210 %433
%436 = OpULessThan %214 %210 %434
%437 = OpSelect %5 %436 %435 %296
%438 = OpAccessChain %297 %149 %111 %437
%439 = OpLoad %26 %438
%440 = OpCompositeExtract %14 %439 0
%441 = OpCompositeExtract %14 %439 1
%442 = OpCompositeExtract %14 %439 2
%443 = OpCompositeExtract %14 %439 3
%444 = OpConvertUToF %326 %440
%445 = OpConvertUToF %326 %441
%446 = OpConvertUToF %326 %442
%447 = OpConvertUToF %326 %443
%448 = OpFAdd %326 %429 %444
%449 = OpFAdd %326 %430 %445
%450 = OpFAdd %326 %431 %446
%451 = OpShiftRightLogical %9 %132 %187
%452 = OpCompositeExtract %5 %451 0
%453 = OpCompositeExtract %5 %451 1
%454 = OpIAdd %5 %210 %452
%455 = OpULessThan %214 %210 %453
%456 = OpSelect %5 %455 %454 %217
%457 = OpBitcast %14 %224
%458 = OpAccessChain %218 %113 %111 %456
OpStore %458 %457
%459 = OpShiftRightLogical %9 %132 %197
%460 = OpCompositeExtract %5 %459 0
%461 = OpCompositeExtract %5 %459 1
%462 = OpIAdd %5 %210 %460
%463 = OpULessThan %214 %210 %461
%464 = OpSelect %5 %463 %462 %237
%466 = OpBitcast %14 %465
%468 = OpBitcast %14 %467
%469 = OpCompositeConstruct %20 %466 %468
%470 = OpAccessChain %238 %118 %111 %464
OpStore %470 %469
%471 = OpShiftRightLogical %9 %132 %187
%472 = OpCompositeExtract %5 %471 0
%473 = OpCompositeExtract %5 %471 1
%474 = OpIAdd %5 %210 %472
%475 = OpULessThan %214 %210 %473
%476 = OpSelect %5 %475 %474 %352
%477 = OpBitcast %14 %467
%479 = OpBitcast %14 %478
%481 = OpBitcast %14 %480
%482 = OpCompositeConstruct %42 %477 %479 %481
%483 = OpAccessChain %353 %122 %111 %476
OpStore %483 %482
%484 = OpShiftRightLogical %9 %132 %175
%485 = OpCompositeExtract %5 %484 0
%486 = OpCompositeExtract %5 %484 1
%487 = OpIAdd %5 %210 %485
%488 = OpULessThan %214 %210 %486
%489 = OpSelect %5 %488 %487 %296
%491 = OpBitcast %14 %490
%493 = OpBitcast %14 %492
%495 = OpBitcast %14 %494
%497 = OpBitcast %14 %496
%498 = OpCompositeConstruct %26 %491 %493 %495 %497
%499 = OpAccessChain %297 %126 %111 %489
OpStore %499 %498
%500 = OpShiftRightLogical %9 %112 %187
%501 = OpCompositeExtract %5 %500 0
%502 = OpCompositeExtract %5 %500 1
%503 = OpIAdd %5 %210 %501
%504 = OpULessThan %214 %210 %502
%505 = OpSelect %5 %504 %503 %217
%507 = OpAccessChain %218 %85 %111 %505
OpStore %507 %506
%508 = OpShiftRightLogical %9 %112 %197
%509 = OpCompositeExtract %5 %508 0
%510 = OpCompositeExtract %5 %508 1
%511 = OpIAdd %5 %210 %509
%512 = OpULessThan %214 %210 %510
%513 = OpSelect %5 %512 %511 %237
%514 = OpCompositeConstruct %20 %244 %305
%515 = OpAccessChain %238 %93 %111 %513
OpStore %515 %514
%516 = OpShiftRightLogical %9 %112 %187
%517 = OpCompositeExtract %5 %516 0
%518 = OpCompositeExtract %5 %516 1
%519 = OpIAdd %5 %210 %517
%520 = OpULessThan %214 %210 %518
%521 = OpSelect %5 %520 %519 %352
%524 = OpCompositeConstruct %42 %305 %522 %523
%525 = OpAccessChain %353 %98 %111 %521
OpStore %525 %524
%526 = OpShiftRightLogical %9 %112 %175
%527 = OpCompositeExtract %5 %526 0
%528 = OpCompositeExtract %5 %526 1
%529 = OpIAdd %5 %210 %527
%530 = OpULessThan %214 %210 %528
%531 = OpSelect %5 %530 %529 %296
%536 = OpCompositeConstruct %26 %532 %533 %534 %535
%537 = OpAccessChain %297 %103 %111 %531
OpStore %537 %536
%538 = OpShiftRightLogical %9 %165 %197
%539 = OpCompositeExtract %5 %538 0
%540 = OpCompositeExtract %5 %538 1
%541 = OpIAdd %5 %210 %539
%542 = OpULessThan %214 %210 %540
%543 = OpSelect %5 %542 %541 %544
%546 = OpAccessChain %545 %154 %111 %543
%547 = OpLoad %5 %546
%548 = OpBitcast %326 %547
%549 = OpFAdd %326 %448 %548
%550 = OpFAdd %326 %449 %548
%551 = OpFAdd %326 %450 %548
%552 = OpIAdd %5 %210 %111
%554 = OpAccessChain %86 %8 %88
%555 = OpLoad %5 %554
%556 = OpIAdd %5 %555 %552
%553 = OpAccessChain %133 %36 %556
%558 = OpAccessChain %86 %8 %88
%559 = OpLoad %5 %558
%560 = OpIAdd %5 %559 %552
%557 = OpAccessChain %138 %41 %560
%561 = OpAccessChain %109 %13 %111 %560
%562 = OpLoad %9 %561
%563 = OpIMul %5 %210 %181
%564 = OpShiftRightLogical %9 %562 %187
%565 = OpCompositeExtract %5 %564 0
%566 = OpCompositeExtract %5 %564 1
%567 = OpIAdd %5 %563 %565
%568 = OpULessThan %214 %563 %566
%569 = OpSelect %5 %568 %567 %217
%570 = OpAccessChain %218 %553 %111 %569
%571 = OpLoad %14 %570
%572 = OpBitcast %221 %571
%573 = OpFConvert %326 %572
%574 = OpFAdd %326 %549 %573
%575 = OpFAdd %326 %550 %573
%576 = OpFAdd %326 %551 %573
%577 = OpFConvert %221 %574
%578 = OpFConvert %221 %575
%579 = OpIMul %5 %210 %181
%580 = OpShiftRightLogical %9 %562 %197
%581 = OpCompositeExtract %5 %580 0
%582 = OpCompositeExtract %5 %580 1
%583 = OpIAdd %5 %579 %581
%584 = OpULessThan %214 %579 %582
%585 = OpSelect %5 %584 %583 %237
%586 = OpBitcast %14 %577
%587 = OpBitcast %14 %578
%588 = OpCompositeConstruct %20 %586 %587
%589 = OpAccessChain %238 %557 %111 %585
OpStore %589 %588
%590 = OpCompositeExtract %5 %204 1
%591 = OpUDiv %5 %590 %186
%592 = OpConvertUToF %326 %591
%593 = OpFAdd %326 %592 %574
%594 = OpFAdd %326 %575 %595
%596 = OpCompositeExtract %5 %174 1
%597 = OpUDiv %5 %596 %186
%598 = OpConvertUToF %326 %597
%599 = OpFAdd %326 %576 %598
%600 = OpFAdd %326 %327 %601
%602 = OpFAdd %326 %600 %342
%603 = OpFAdd %326 %602 %360
%604 = OpFAdd %326 %603 %384
%605 = OpFAdd %326 %604 %396
%606 = OpFAdd %326 %605 %411
%607 = OpFAdd %326 %606 %426
%608 = OpFAdd %326 %607 %447
%609 = OpFAdd %326 %608 %548
%610 = OpFAdd %326 %609 %573
%611 = OpCompositeExtract %5 %132 1
%612 = OpIMul %5 %611 %613
%614 = OpConvertUToF %326 %612
%615 = OpFAdd %326 %593 %614
%616 = OpConvertFToU %5 %615
%617 = OpConvertFToU %5 %594
%618 = OpConvertFToU %5 %599
%619 = OpConvertFToU %5 %610
%620 = OpShiftLeftLogical %5 %210 %88
%621 = OpShiftRightLogical %9 %165 %622
%623 = OpCompositeExtract %5 %621 0
%624 = OpCompositeExtract %5 %621 1
%625 = OpIAdd %5 %210 %623
%626 = OpULessThan %214 %210 %624
%627 = OpSelect %5 %626 %625 %628
%629 = OpCompositeConstruct %58 %616 %617 %618 %619
%631 = OpAccessChain %630 %159 %111 %627
OpStore %631 %629
OpReturn
OpFunctionEnd
#endif
