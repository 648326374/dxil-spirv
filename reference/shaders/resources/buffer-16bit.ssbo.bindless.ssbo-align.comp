#version 460
#extension GL_EXT_shader_explicit_arithmetic_types_int16 : require
#extension GL_EXT_shader_16bit_storage : require
#if defined(GL_AMD_gpu_shader_half_float)
#extension GL_AMD_gpu_shader_half_float : require
#elif defined(GL_EXT_shader_explicit_arithmetic_types_float16)
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : require
#else
#error No extension available for FP16.
#endif
#extension GL_EXT_buffer_reference : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_scalar_block_layout : require
#extension GL_KHR_shader_subgroup_ballot : require
layout(local_size_x = 64, local_size_y = 1, local_size_z = 1) in;

layout(set = 15, binding = 0, std430) restrict readonly buffer SSBO_Offsets
{
    uvec2 _m0[];
} _13;

layout(set = 4, binding = 0, std430) buffer SSBO
{
    uint16_t _m0[];
} _19[];

layout(set = 4, binding = 0, std430) buffer _21_24
{
    uint16_t _m0[];
} _24[];

layout(set = 4, binding = 0, std430) buffer _27_30
{
    u16vec2 _m0[];
} _30[];

layout(set = 4, binding = 0, scalar) buffer _33_36
{
    u16vec3 _m0[];
} _36[];

layout(set = 4, binding = 0, std430) buffer _39_42
{
    u16vec4 _m0[];
} _42[];

layout(set = 4, binding = 0, std430) buffer _44_47
{
    uint _m0[];
} _47[];

layout(set = 4, binding = 0, std430) buffer _50_53
{
    uvec4 _m0[];
} _53[];

layout(set = 4, binding = 0, std430) writeonly buffer _55_58
{
    uint16_t _m0[];
} _58[];

layout(set = 4, binding = 0, std430) writeonly buffer _60_63
{
    u16vec2 _m0[];
} _63[];

layout(set = 4, binding = 0, scalar) writeonly buffer _65_68
{
    u16vec3 _m0[];
} _68[];

layout(set = 4, binding = 0, std430) writeonly buffer _70_73
{
    u16vec4 _m0[];
} _73[];

layout(push_constant, std430) uniform RootConstants
{
    uint _m0;
    uint _m1;
    uint _m2;
    uint _m3;
    uint _m4;
    uint _m5;
    uint _m6;
    uint _m7;
} registers;

void main()
{
    uint _96 = registers._m4 + 6u;
    uint _97 = subgroupBroadcastFirst(_96);
    uint _119 = registers._m4 + 5u;
    uint _120 = subgroupBroadcastFirst(_119);
    uint _127 = registers._m4 + 4u;
    uint _132 = registers._m4 + 4u;
    uint _137 = registers._m4 + 4u;
    uint _142 = registers._m4 + 4u;
    uint _152 = registers._m4 + 4u;
    uint _153 = subgroupBroadcastFirst(_152);
    uint _160 = registers._m4 + 3u;
    uvec2 _164 = _13._m0[subgroupBroadcastFirst(_160)] >> uvec2(1u);
    uint _170 = registers._m4 + 2u;
    uvec2 _175 = _13._m0[subgroupBroadcastFirst(_170)] >> uvec2(1u);
    uint _179 = registers._m4 + 1u;
    uvec2 _183 = _13._m0[subgroupBroadcastFirst(_179)] >> uvec2(1u);
    uvec2 _190 = _13._m0[subgroupBroadcastFirst(registers._m4)] >> uvec2(1u);
    _19[registers._m4]._m0[(gl_GlobalInvocationID.x < _190.y) ? (gl_GlobalInvocationID.x + _190.x) : 2147483644u] = float16BitsToUint16(uint16BitsToFloat16(_19[registers._m4]._m0[(gl_GlobalInvocationID.x < _190.y) ? (gl_GlobalInvocationID.x + _190.x) : 2147483644u]) + float16_t(1.0));
    uint _218 = gl_GlobalInvocationID.x * 2u;
    uint _223 = (_218 < _183.y) ? (_218 + _183.x) : 2147483644u;
    uint16_t _225 = _19[_179]._m0[_223];
    uint16_t _228 = _19[_179]._m0[_223 + 1u];
    u16vec2 _229 = u16vec2(_225, _228);
    uint _235 = gl_GlobalInvocationID.x * 2u;
    uint _240 = (_235 < _183.y) ? (_235 + _183.x) : 2147483644u;
    _19[_179]._m0[_240] = _229.x + 2us;
    _19[_179]._m0[_240 + 1u] = _229.y + 2us;
    uint _244 = gl_GlobalInvocationID.x * 3u;
    uint _249 = (_244 < _175.y) ? (_244 + _175.x) : 2147483644u;
    uint16_t _251 = _19[_170]._m0[_249];
    uint16_t _254 = _19[_170]._m0[_249 + 1u];
    uint16_t _257 = _19[_170]._m0[_249 + 2u];
    f16vec3 _260 = uint16BitsToFloat16(u16vec3(_251, _254, _257));
    uint _268 = gl_GlobalInvocationID.x * 3u;
    uint _273 = (_268 < _175.y) ? (_268 + _175.x) : 2147483644u;
    _19[_170]._m0[_273] = float16BitsToUint16(_260.x + float16_t(3.0));
    _19[_170]._m0[_273 + 1u] = float16BitsToUint16(_260.y + float16_t(3.0));
    _19[_170]._m0[_273 + 2u] = float16BitsToUint16(_260.z + float16_t(3.0));
    uint _282 = gl_GlobalInvocationID.x * 4u;
    uint _287 = (_282 < _164.y) ? (_282 + _164.x) : 2147483644u;
    uint16_t _289 = _19[_160]._m0[_287];
    uint16_t _292 = _19[_160]._m0[_287 + 1u];
    uint16_t _295 = _19[_160]._m0[_287 + 2u];
    uint16_t _298 = _19[_160]._m0[_287 + 3u];
    u16vec4 _299 = u16vec4(_289, _292, _295, _298);
    uint _309 = gl_GlobalInvocationID.x * 4u;
    uint _314 = (_309 < _164.y) ? (_309 + _164.x) : 2147483644u;
    _19[_160]._m0[_314] = _299.x + 4us;
    _19[_160]._m0[_314 + 1u] = _299.y + 4us;
    _19[_160]._m0[_314 + 2u] = _299.z + 4us;
    _19[_160]._m0[_314 + 3u] = _299.w + 4us;
    uvec2 _323 = _13._m0[_153] >> uvec2(1u);
    uint16_t _330 = _24[_127]._m0[(gl_GlobalInvocationID.x < _323.y) ? (gl_GlobalInvocationID.x + _323.x) : 2147483644u];
    float _333 = float(uint16BitsToFloat16(_330));
    uvec2 _335 = _13._m0[_153] >> uvec2(1u);
    u16vec2 _343 = _30[_132]._m0[(gl_GlobalInvocationID.x < _335.y) ? (gl_GlobalInvocationID.x + _335.x) : 2147483644u];
    f16vec2 _345 = uint16BitsToFloat16(_343);
    float _349 = float(_345.y);
    float _350 = float(_345.x) + _333;
    uvec2 _353 = _13._m0[_153] >> uvec2(1u);
    u16vec3 _361 = _36[_137]._m0[(gl_GlobalInvocationID.x < _353.y) ? (gl_GlobalInvocationID.x + _353.x) : 2147483644u];
    f16vec3 _362 = uint16BitsToFloat16(_361);
    float _366 = float(_362.x);
    uvec2 _373 = _13._m0[_153] >> uvec2(1u);
    u16vec4 _381 = _42[_142]._m0[(gl_GlobalInvocationID.x < _373.y) ? (gl_GlobalInvocationID.x + _373.x) : 2147483644u];
    f16vec4 _383 = uint16BitsToFloat16(_381);
    uvec2 _395 = _13._m0[_153] >> uvec2(1u);
    uint16_t _402 = _24[_127]._m0[(gl_GlobalInvocationID.x < _395.y) ? (gl_GlobalInvocationID.x + _395.x) : 2147483644u];
    float _403 = float(_402);
    uvec2 _407 = _13._m0[_153] >> uvec2(1u);
    uint _412 = (gl_GlobalInvocationID.x < _407.y) ? (gl_GlobalInvocationID.x + _407.x) : 2147483644u;
    u16vec2 _414 = _30[_132]._m0[_412];
    float _417 = float(_414.x);
    float _418 = float(_414.y);
    uvec2 _422 = _13._m0[_153] >> uvec2(1u);
    uint _427 = (gl_GlobalInvocationID.x < _422.y) ? (gl_GlobalInvocationID.x + _422.x) : 2147483644u;
    u16vec3 _429 = _36[_137]._m0[_427];
    float _433 = float(_429.x);
    uvec2 _439 = _13._m0[_153] >> uvec2(1u);
    uint _444 = (gl_GlobalInvocationID.x < _439.y) ? (gl_GlobalInvocationID.x + _439.x) : 2147483644u;
    u16vec4 _446 = _42[_142]._m0[_444];
    uvec2 _458 = _13._m0[_120] >> uvec2(1u);
    _58[registers._m4 + 5u]._m0[(gl_GlobalInvocationID.x < _458.y) ? (gl_GlobalInvocationID.x + _458.x) : 2147483644u] = float16BitsToUint16(float16_t(1.0));
    uvec2 _466 = _13._m0[_120] >> uvec2(1u);
    _63[registers._m4 + 5u]._m0[(gl_GlobalInvocationID.x < _466.y) ? (gl_GlobalInvocationID.x + _466.x) : 2147483644u] = u16vec2(float16BitsToUint16(float16_t(2.0)), float16BitsToUint16(float16_t(4.0)));
    uvec2 _478 = _13._m0[_120] >> uvec2(1u);
    _68[registers._m4 + 5u]._m0[(gl_GlobalInvocationID.x < _478.y) ? (gl_GlobalInvocationID.x + _478.x) : 2147483644u] = u16vec3(float16BitsToUint16(float16_t(4.0)), float16BitsToUint16(float16_t(5.0)), float16BitsToUint16(float16_t(6.0)));
    uvec2 _491 = _13._m0[_120] >> uvec2(1u);
    _73[_119]._m0[(gl_GlobalInvocationID.x < _491.y) ? (gl_GlobalInvocationID.x + _491.x) : 2147483644u] = u16vec4(float16BitsToUint16(float16_t(7.0)), float16BitsToUint16(float16_t(8.0)), float16BitsToUint16(float16_t(9.0)), float16BitsToUint16(float16_t(10.0)));
    uvec2 _507 = _13._m0[_97] >> uvec2(1u);
    _58[registers._m4 + 6u]._m0[(gl_GlobalInvocationID.x < _507.y) ? (gl_GlobalInvocationID.x + _507.x) : 2147483644u] = 1us;
    uvec2 _515 = _13._m0[_97] >> uvec2(1u);
    _63[registers._m4 + 6u]._m0[(gl_GlobalInvocationID.x < _515.y) ? (gl_GlobalInvocationID.x + _515.x) : 2147483644u] = u16vec2(2us, 4us);
    uvec2 _523 = _13._m0[_97] >> uvec2(1u);
    _68[registers._m4 + 6u]._m0[(gl_GlobalInvocationID.x < _523.y) ? (gl_GlobalInvocationID.x + _523.x) : 2147483644u] = u16vec3(4us, 5us, 6us);
    uvec2 _533 = _13._m0[_97] >> uvec2(1u);
    _73[_96]._m0[(gl_GlobalInvocationID.x < _533.y) ? (gl_GlobalInvocationID.x + _533.x) : 2147483644u] = u16vec4(7us, 8us, 9us, 10us);
    uvec2 _545 = _13._m0[_153] >> uvec2(2u);
    uint _555 = _47[registers._m4 + 4u]._m0[(gl_GlobalInvocationID.x < _545.y) ? (gl_GlobalInvocationID.x + _545.x) : 1073741820u];
    float _556 = uintBitsToFloat(_555);
    uint _560 = gl_GlobalInvocationID.x + 0u;
    uint _568 = registers._m4 + _560;
    uint _571 = gl_GlobalInvocationID.x * 2u;
    uvec2 _572 = _13._m0[_568] >> uvec2(1u);
    uint16_t _579 = _24[nonuniformEXT(registers._m4 + _560)]._m0[(_571 < _572.y) ? (_571 + _572.x) : 2147483644u];
    float _581 = float(uint16BitsToFloat16(_579));
    float _582 = (((((((_350 + _366) + float(_383.x)) + _403) + _417) + _433) + float(_446.x)) + _556) + _581;
    float _583 = (((((((_350 + float(_362.y)) + float(_383.y)) + _403) + _417) + float(_429.y)) + float(_446.y)) + _556) + _581;
    uint _587 = gl_GlobalInvocationID.x * 2u;
    uvec2 _588 = _13._m0[_568] >> uvec2(1u);
    _30[nonuniformEXT(_568)]._m0[(_587 < _588.y) ? (_587 + _588.x) : 2147483644u] = u16vec2(float16BitsToUint16(float16_t(_582)), float16BitsToUint16(float16_t(_583)));
    uvec2 _629 = _13._m0[_153] >> uvec2(2u);
    _53[_152]._m0[(gl_GlobalInvocationID.x < _629.y) ? (gl_GlobalInvocationID.x + _629.x) : 1073741820u] = uvec4(uint((float(_190.y / 1u) + _582) + float(_13._m0[_120].y * 8u)), uint(_583 + 2.0), uint((((((((((_349 + _333) + float(_362.z)) + float(_383.z)) + _403) + _418) + float(_429.z)) + float(_446.z)) + _556) + _581) + float(_164.y / 4u)), uint((((((((((_333 + 8.0) + _349) + _366) + float(_383.w)) + _403) + _418) + _433) + float(_446.w)) + _556) + _581));
}


#if 0
// SPIR-V disassembly
; SPIR-V
; Version: 1.3
; Generator: Unknown(30017); 21022
; Bound: 640
; Schema: 0
OpCapability Shader
OpCapability Float16
OpCapability Int16
OpCapability StorageBufferArrayDynamicIndexing
OpCapability ImageQuery
OpCapability GroupNonUniformBallot
OpCapability RuntimeDescriptorArray
OpCapability StorageBufferArrayNonUniformIndexing
OpCapability PhysicalStorageBufferAddresses
OpExtension "SPV_EXT_descriptor_indexing"
OpExtension "SPV_KHR_physical_storage_buffer"
OpMemoryModel PhysicalStorageBuffer64 GLSL450
OpEntryPoint GLCompute %3 "main" %193
OpExecutionMode %3 LocalSize 64 1 1
OpName %3 "main"
OpName %6 "RootConstants"
OpName %8 "registers"
OpName %11 "SSBO_Offsets"
OpName %16 "SSBO"
OpName %21 "SSBO"
OpName %27 "SSBO"
OpName %33 "SSBO"
OpName %39 "SSBO"
OpName %44 "SSBO"
OpName %50 "SSBO"
OpName %55 "SSBO"
OpName %60 "SSBO"
OpName %65 "SSBO"
OpName %70 "SSBO"
OpDecorate %6 Block
OpMemberDecorate %6 0 Offset 0
OpMemberDecorate %6 1 Offset 4
OpMemberDecorate %6 2 Offset 8
OpMemberDecorate %6 3 Offset 12
OpMemberDecorate %6 4 Offset 16
OpMemberDecorate %6 5 Offset 20
OpMemberDecorate %6 6 Offset 24
OpMemberDecorate %6 7 Offset 28
OpDecorate %10 ArrayStride 8
OpMemberDecorate %11 0 Offset 0
OpDecorate %11 Block
OpDecorate %13 DescriptorSet 15
OpDecorate %13 Binding 0
OpDecorate %13 NonWritable
OpDecorate %13 Restrict
OpDecorate %15 ArrayStride 2
OpMemberDecorate %16 0 Offset 0
OpDecorate %16 Block
OpDecorate %19 DescriptorSet 4
OpDecorate %19 Binding 0
OpDecorate %20 ArrayStride 2
OpMemberDecorate %21 0 Offset 0
OpDecorate %21 Block
OpDecorate %24 DescriptorSet 4
OpDecorate %24 Binding 0
OpDecorate %24 Aliased
OpDecorate %26 ArrayStride 4
OpMemberDecorate %27 0 Offset 0
OpDecorate %27 Block
OpDecorate %30 DescriptorSet 4
OpDecorate %30 Binding 0
OpDecorate %30 Aliased
OpDecorate %32 ArrayStride 6
OpMemberDecorate %33 0 Offset 0
OpDecorate %33 Block
OpDecorate %36 DescriptorSet 4
OpDecorate %36 Binding 0
OpDecorate %36 Aliased
OpDecorate %38 ArrayStride 8
OpMemberDecorate %39 0 Offset 0
OpDecorate %39 Block
OpDecorate %42 DescriptorSet 4
OpDecorate %42 Binding 0
OpDecorate %42 Aliased
OpDecorate %43 ArrayStride 4
OpMemberDecorate %44 0 Offset 0
OpDecorate %44 Block
OpDecorate %47 DescriptorSet 4
OpDecorate %47 Binding 0
OpDecorate %47 Aliased
OpDecorate %49 ArrayStride 16
OpMemberDecorate %50 0 Offset 0
OpDecorate %50 Block
OpDecorate %53 DescriptorSet 4
OpDecorate %53 Binding 0
OpDecorate %53 Aliased
OpDecorate %54 ArrayStride 2
OpMemberDecorate %55 0 Offset 0
OpDecorate %55 Block
OpDecorate %58 DescriptorSet 4
OpDecorate %58 Binding 0
OpDecorate %58 NonReadable
OpDecorate %58 Aliased
OpDecorate %59 ArrayStride 4
OpMemberDecorate %60 0 Offset 0
OpDecorate %60 Block
OpDecorate %63 DescriptorSet 4
OpDecorate %63 Binding 0
OpDecorate %63 NonReadable
OpDecorate %63 Aliased
OpDecorate %64 ArrayStride 6
OpMemberDecorate %65 0 Offset 0
OpDecorate %65 Block
OpDecorate %68 DescriptorSet 4
OpDecorate %68 Binding 0
OpDecorate %68 NonReadable
OpDecorate %68 Aliased
OpDecorate %69 ArrayStride 8
OpMemberDecorate %70 0 Offset 0
OpDecorate %70 Block
OpDecorate %73 DescriptorSet 4
OpDecorate %73 Binding 0
OpDecorate %73 NonReadable
OpDecorate %73 Aliased
OpDecorate %193 BuiltIn GlobalInvocationId
OpDecorate %564 NonUniform
OpDecorate %561 NonUniform
OpDecorate %568 NonUniform
OpDecorate %565 NonUniform
OpDecorate %578 NonUniform
OpDecorate %597 NonUniform
%1 = OpTypeVoid
%2 = OpTypeFunction %1
%5 = OpTypeInt 32 0
%6 = OpTypeStruct %5 %5 %5 %5 %5 %5 %5 %5
%7 = OpTypePointer PushConstant %6
%8 = OpVariable %7 PushConstant
%9 = OpTypeVector %5 2
%10 = OpTypeRuntimeArray %9
%11 = OpTypeStruct %10
%12 = OpTypePointer StorageBuffer %11
%13 = OpVariable %12 StorageBuffer
%14 = OpTypeInt 16 0
%15 = OpTypeRuntimeArray %14
%16 = OpTypeStruct %15
%17 = OpTypeRuntimeArray %16
%18 = OpTypePointer StorageBuffer %17
%19 = OpVariable %18 StorageBuffer
%20 = OpTypeRuntimeArray %14
%21 = OpTypeStruct %20
%22 = OpTypeRuntimeArray %21
%23 = OpTypePointer StorageBuffer %22
%24 = OpVariable %23 StorageBuffer
%25 = OpTypeVector %14 2
%26 = OpTypeRuntimeArray %25
%27 = OpTypeStruct %26
%28 = OpTypeRuntimeArray %27
%29 = OpTypePointer StorageBuffer %28
%30 = OpVariable %29 StorageBuffer
%31 = OpTypeVector %14 3
%32 = OpTypeRuntimeArray %31
%33 = OpTypeStruct %32
%34 = OpTypeRuntimeArray %33
%35 = OpTypePointer StorageBuffer %34
%36 = OpVariable %35 StorageBuffer
%37 = OpTypeVector %14 4
%38 = OpTypeRuntimeArray %37
%39 = OpTypeStruct %38
%40 = OpTypeRuntimeArray %39
%41 = OpTypePointer StorageBuffer %40
%42 = OpVariable %41 StorageBuffer
%43 = OpTypeRuntimeArray %5
%44 = OpTypeStruct %43
%45 = OpTypeRuntimeArray %44
%46 = OpTypePointer StorageBuffer %45
%47 = OpVariable %46 StorageBuffer
%48 = OpTypeVector %5 4
%49 = OpTypeRuntimeArray %48
%50 = OpTypeStruct %49
%51 = OpTypeRuntimeArray %50
%52 = OpTypePointer StorageBuffer %51
%53 = OpVariable %52 StorageBuffer
%54 = OpTypeRuntimeArray %14
%55 = OpTypeStruct %54
%56 = OpTypeRuntimeArray %55
%57 = OpTypePointer StorageBuffer %56
%58 = OpVariable %57 StorageBuffer
%59 = OpTypeRuntimeArray %25
%60 = OpTypeStruct %59
%61 = OpTypeRuntimeArray %60
%62 = OpTypePointer StorageBuffer %61
%63 = OpVariable %62 StorageBuffer
%64 = OpTypeRuntimeArray %31
%65 = OpTypeStruct %64
%66 = OpTypeRuntimeArray %65
%67 = OpTypePointer StorageBuffer %66
%68 = OpVariable %67 StorageBuffer
%69 = OpTypeRuntimeArray %37
%70 = OpTypeStruct %69
%71 = OpTypeRuntimeArray %70
%72 = OpTypePointer StorageBuffer %71
%73 = OpVariable %72 StorageBuffer
%74 = OpTypePointer StorageBuffer %55
%76 = OpTypePointer PushConstant %5
%78 = OpConstant %5 4
%81 = OpConstant %5 6
%82 = OpTypePointer StorageBuffer %60
%87 = OpTypePointer StorageBuffer %65
%92 = OpTypePointer StorageBuffer %70
%98 = OpConstant %5 3
%99 = OpTypePointer StorageBuffer %9
%101 = OpConstant %5 0
%107 = OpConstant %5 5
%123 = OpTypePointer StorageBuffer %21
%128 = OpTypePointer StorageBuffer %27
%133 = OpTypePointer StorageBuffer %33
%138 = OpTypePointer StorageBuffer %39
%143 = OpTypePointer StorageBuffer %44
%148 = OpTypePointer StorageBuffer %50
%156 = OpTypePointer StorageBuffer %16
%165 = OpConstant %5 1
%166 = OpConstantComposite %9 %165 %165
%171 = OpConstant %5 2
%191 = OpTypeVector %5 3
%192 = OpTypePointer Input %191
%193 = OpVariable %192 Input
%194 = OpTypePointer Input %5
%200 = OpTypeBool
%203 = OpConstant %5 2147483644
%204 = OpTypePointer StorageBuffer %14
%207 = OpTypeFloat 16
%210 = OpConstant %207 0x1p+0
%233 = OpConstant %14 2
%259 = OpTypeVector %207 3
%265 = OpConstant %207 0x1.8p+1
%305 = OpConstant %14 4
%332 = OpTypeFloat 32
%341 = OpTypePointer StorageBuffer %25
%344 = OpTypeVector %207 2
%359 = OpTypePointer StorageBuffer %31
%379 = OpTypePointer StorageBuffer %37
%382 = OpTypeVector %207 4
%472 = OpConstant %207 0x1p+1
%474 = OpConstant %207 0x1p+2
%485 = OpConstant %207 0x1.4p+2
%487 = OpConstant %207 0x1.8p+2
%497 = OpConstant %207 0x1.cp+2
%499 = OpConstant %207 0x1p+3
%501 = OpConstant %207 0x1.2p+3
%503 = OpConstant %207 0x1.4p+3
%513 = OpConstant %14 1
%529 = OpConstant %14 5
%530 = OpConstant %14 6
%539 = OpConstant %14 7
%540 = OpConstant %14 8
%541 = OpConstant %14 9
%542 = OpConstant %14 10
%546 = OpConstantComposite %9 %171 %171
%552 = OpConstant %5 1073741820
%553 = OpTypePointer StorageBuffer %5
%603 = OpConstant %332 2
%609 = OpConstant %332 8
%621 = OpConstant %5 8
%636 = OpTypePointer StorageBuffer %48
%3 = OpFunction %1 None %2
%4 = OpLabel
OpBranch %638
%638 = OpLabel
%77 = OpAccessChain %76 %8 %78
%79 = OpLoad %5 %77
%80 = OpIAdd %5 %79 %81
%75 = OpAccessChain %74 %58 %80
%84 = OpAccessChain %76 %8 %78
%85 = OpLoad %5 %84
%86 = OpIAdd %5 %85 %81
%83 = OpAccessChain %82 %63 %86
%89 = OpAccessChain %76 %8 %78
%90 = OpLoad %5 %89
%91 = OpIAdd %5 %90 %81
%88 = OpAccessChain %87 %68 %91
%94 = OpAccessChain %76 %8 %78
%95 = OpLoad %5 %94
%96 = OpIAdd %5 %95 %81
%93 = OpAccessChain %92 %73 %96
%97 = OpGroupNonUniformBroadcastFirst %5 %98 %96
%100 = OpAccessChain %99 %13 %101 %97
%102 = OpLoad %9 %100
%104 = OpAccessChain %76 %8 %78
%105 = OpLoad %5 %104
%106 = OpIAdd %5 %105 %107
%103 = OpAccessChain %74 %58 %106
%109 = OpAccessChain %76 %8 %78
%110 = OpLoad %5 %109
%111 = OpIAdd %5 %110 %107
%108 = OpAccessChain %82 %63 %111
%113 = OpAccessChain %76 %8 %78
%114 = OpLoad %5 %113
%115 = OpIAdd %5 %114 %107
%112 = OpAccessChain %87 %68 %115
%117 = OpAccessChain %76 %8 %78
%118 = OpLoad %5 %117
%119 = OpIAdd %5 %118 %107
%116 = OpAccessChain %92 %73 %119
%120 = OpGroupNonUniformBroadcastFirst %5 %98 %119
%121 = OpAccessChain %99 %13 %101 %120
%122 = OpLoad %9 %121
%125 = OpAccessChain %76 %8 %78
%126 = OpLoad %5 %125
%127 = OpIAdd %5 %126 %78
%124 = OpAccessChain %123 %24 %127
%130 = OpAccessChain %76 %8 %78
%131 = OpLoad %5 %130
%132 = OpIAdd %5 %131 %78
%129 = OpAccessChain %128 %30 %132
%135 = OpAccessChain %76 %8 %78
%136 = OpLoad %5 %135
%137 = OpIAdd %5 %136 %78
%134 = OpAccessChain %133 %36 %137
%140 = OpAccessChain %76 %8 %78
%141 = OpLoad %5 %140
%142 = OpIAdd %5 %141 %78
%139 = OpAccessChain %138 %42 %142
%145 = OpAccessChain %76 %8 %78
%146 = OpLoad %5 %145
%147 = OpIAdd %5 %146 %78
%144 = OpAccessChain %143 %47 %147
%150 = OpAccessChain %76 %8 %78
%151 = OpLoad %5 %150
%152 = OpIAdd %5 %151 %78
%149 = OpAccessChain %148 %53 %152
%153 = OpGroupNonUniformBroadcastFirst %5 %98 %152
%154 = OpAccessChain %99 %13 %101 %153
%155 = OpLoad %9 %154
%158 = OpAccessChain %76 %8 %78
%159 = OpLoad %5 %158
%160 = OpIAdd %5 %159 %98
%157 = OpAccessChain %156 %19 %160
%161 = OpGroupNonUniformBroadcastFirst %5 %98 %160
%162 = OpAccessChain %99 %13 %101 %161
%163 = OpLoad %9 %162
%164 = OpShiftRightLogical %9 %163 %166
%168 = OpAccessChain %76 %8 %78
%169 = OpLoad %5 %168
%170 = OpIAdd %5 %169 %171
%167 = OpAccessChain %156 %19 %170
%172 = OpGroupNonUniformBroadcastFirst %5 %98 %170
%173 = OpAccessChain %99 %13 %101 %172
%174 = OpLoad %9 %173
%175 = OpShiftRightLogical %9 %174 %166
%177 = OpAccessChain %76 %8 %78
%178 = OpLoad %5 %177
%179 = OpIAdd %5 %178 %165
%176 = OpAccessChain %156 %19 %179
%180 = OpGroupNonUniformBroadcastFirst %5 %98 %179
%181 = OpAccessChain %99 %13 %101 %180
%182 = OpLoad %9 %181
%183 = OpShiftRightLogical %9 %182 %166
%185 = OpAccessChain %76 %8 %78
%186 = OpLoad %5 %185
%184 = OpAccessChain %156 %19 %186
%187 = OpGroupNonUniformBroadcastFirst %5 %98 %186
%188 = OpAccessChain %99 %13 %101 %187
%189 = OpLoad %9 %188
%190 = OpShiftRightLogical %9 %189 %166
%195 = OpAccessChain %194 %193 %101
%196 = OpLoad %5 %195
%197 = OpCompositeExtract %5 %190 0
%198 = OpCompositeExtract %5 %190 1
%199 = OpIAdd %5 %196 %197
%201 = OpULessThan %200 %196 %198
%202 = OpSelect %5 %201 %199 %203
%205 = OpAccessChain %204 %184 %101 %202
%206 = OpLoad %14 %205
%208 = OpBitcast %207 %206
%209 = OpFAdd %207 %208 %210
%211 = OpCompositeExtract %5 %190 0
%212 = OpCompositeExtract %5 %190 1
%213 = OpIAdd %5 %196 %211
%214 = OpULessThan %200 %196 %212
%215 = OpSelect %5 %214 %213 %203
%216 = OpBitcast %14 %209
%217 = OpAccessChain %204 %184 %101 %215
OpStore %217 %216
%218 = OpIMul %5 %196 %171
%219 = OpCompositeExtract %5 %183 0
%220 = OpCompositeExtract %5 %183 1
%221 = OpIAdd %5 %218 %219
%222 = OpULessThan %200 %218 %220
%223 = OpSelect %5 %222 %221 %203
%224 = OpAccessChain %204 %176 %101 %223
%225 = OpLoad %14 %224
%227 = OpIAdd %5 %223 %165
%226 = OpAccessChain %204 %176 %101 %227
%228 = OpLoad %14 %226
%229 = OpCompositeConstruct %25 %225 %228
%230 = OpCompositeExtract %14 %229 0
%231 = OpCompositeExtract %14 %229 1
%232 = OpIAdd %14 %230 %233
%234 = OpIAdd %14 %231 %233
%235 = OpIMul %5 %196 %171
%236 = OpCompositeExtract %5 %183 0
%237 = OpCompositeExtract %5 %183 1
%238 = OpIAdd %5 %235 %236
%239 = OpULessThan %200 %235 %237
%240 = OpSelect %5 %239 %238 %203
%241 = OpAccessChain %204 %176 %101 %240
OpStore %241 %232
%243 = OpIAdd %5 %240 %165
%242 = OpAccessChain %204 %176 %101 %243
OpStore %242 %234
%244 = OpIMul %5 %196 %98
%245 = OpCompositeExtract %5 %175 0
%246 = OpCompositeExtract %5 %175 1
%247 = OpIAdd %5 %244 %245
%248 = OpULessThan %200 %244 %246
%249 = OpSelect %5 %248 %247 %203
%250 = OpAccessChain %204 %167 %101 %249
%251 = OpLoad %14 %250
%253 = OpIAdd %5 %249 %165
%252 = OpAccessChain %204 %167 %101 %253
%254 = OpLoad %14 %252
%256 = OpIAdd %5 %249 %171
%255 = OpAccessChain %204 %167 %101 %256
%257 = OpLoad %14 %255
%258 = OpCompositeConstruct %31 %251 %254 %257
%260 = OpBitcast %259 %258
%261 = OpCompositeExtract %207 %260 0
%262 = OpCompositeExtract %207 %260 1
%263 = OpCompositeExtract %207 %260 2
%264 = OpFAdd %207 %261 %265
%266 = OpFAdd %207 %262 %265
%267 = OpFAdd %207 %263 %265
%268 = OpIMul %5 %196 %98
%269 = OpCompositeExtract %5 %175 0
%270 = OpCompositeExtract %5 %175 1
%271 = OpIAdd %5 %268 %269
%272 = OpULessThan %200 %268 %270
%273 = OpSelect %5 %272 %271 %203
%274 = OpBitcast %14 %264
%275 = OpBitcast %14 %266
%276 = OpBitcast %14 %267
%277 = OpAccessChain %204 %167 %101 %273
OpStore %277 %274
%279 = OpIAdd %5 %273 %165
%278 = OpAccessChain %204 %167 %101 %279
OpStore %278 %275
%281 = OpIAdd %5 %273 %171
%280 = OpAccessChain %204 %167 %101 %281
OpStore %280 %276
%282 = OpIMul %5 %196 %78
%283 = OpCompositeExtract %5 %164 0
%284 = OpCompositeExtract %5 %164 1
%285 = OpIAdd %5 %282 %283
%286 = OpULessThan %200 %282 %284
%287 = OpSelect %5 %286 %285 %203
%288 = OpAccessChain %204 %157 %101 %287
%289 = OpLoad %14 %288
%291 = OpIAdd %5 %287 %165
%290 = OpAccessChain %204 %157 %101 %291
%292 = OpLoad %14 %290
%294 = OpIAdd %5 %287 %171
%293 = OpAccessChain %204 %157 %101 %294
%295 = OpLoad %14 %293
%297 = OpIAdd %5 %287 %98
%296 = OpAccessChain %204 %157 %101 %297
%298 = OpLoad %14 %296
%299 = OpCompositeConstruct %37 %289 %292 %295 %298
%300 = OpCompositeExtract %14 %299 0
%301 = OpCompositeExtract %14 %299 1
%302 = OpCompositeExtract %14 %299 2
%303 = OpCompositeExtract %14 %299 3
%304 = OpIAdd %14 %300 %305
%306 = OpIAdd %14 %301 %305
%307 = OpIAdd %14 %302 %305
%308 = OpIAdd %14 %303 %305
%309 = OpIMul %5 %196 %78
%310 = OpCompositeExtract %5 %164 0
%311 = OpCompositeExtract %5 %164 1
%312 = OpIAdd %5 %309 %310
%313 = OpULessThan %200 %309 %311
%314 = OpSelect %5 %313 %312 %203
%315 = OpAccessChain %204 %157 %101 %314
OpStore %315 %304
%317 = OpIAdd %5 %314 %165
%316 = OpAccessChain %204 %157 %101 %317
OpStore %316 %306
%319 = OpIAdd %5 %314 %171
%318 = OpAccessChain %204 %157 %101 %319
OpStore %318 %307
%321 = OpIAdd %5 %314 %98
%320 = OpAccessChain %204 %157 %101 %321
OpStore %320 %308
%322 = OpShiftLeftLogical %5 %196 %165
%323 = OpShiftRightLogical %9 %155 %166
%324 = OpCompositeExtract %5 %323 0
%325 = OpCompositeExtract %5 %323 1
%326 = OpIAdd %5 %196 %324
%327 = OpULessThan %200 %196 %325
%328 = OpSelect %5 %327 %326 %203
%329 = OpAccessChain %204 %124 %101 %328
%330 = OpLoad %14 %329
%331 = OpBitcast %207 %330
%333 = OpFConvert %332 %331
%334 = OpShiftLeftLogical %5 %196 %171
%335 = OpShiftRightLogical %9 %155 %166
%336 = OpCompositeExtract %5 %335 0
%337 = OpCompositeExtract %5 %335 1
%338 = OpIAdd %5 %196 %336
%339 = OpULessThan %200 %196 %337
%340 = OpSelect %5 %339 %338 %203
%342 = OpAccessChain %341 %129 %101 %340
%343 = OpLoad %25 %342
%345 = OpBitcast %344 %343
%346 = OpCompositeExtract %207 %345 0
%347 = OpCompositeExtract %207 %345 1
%348 = OpFConvert %332 %346
%349 = OpFConvert %332 %347
%350 = OpFAdd %332 %348 %333
%351 = OpFAdd %332 %349 %333
%352 = OpIMul %5 %196 %81
%353 = OpShiftRightLogical %9 %155 %166
%354 = OpCompositeExtract %5 %353 0
%355 = OpCompositeExtract %5 %353 1
%356 = OpIAdd %5 %196 %354
%357 = OpULessThan %200 %196 %355
%358 = OpSelect %5 %357 %356 %203
%360 = OpAccessChain %359 %134 %101 %358
%361 = OpLoad %31 %360
%362 = OpBitcast %259 %361
%363 = OpCompositeExtract %207 %362 0
%364 = OpCompositeExtract %207 %362 1
%365 = OpCompositeExtract %207 %362 2
%366 = OpFConvert %332 %363
%367 = OpFConvert %332 %364
%368 = OpFConvert %332 %365
%369 = OpFAdd %332 %350 %366
%370 = OpFAdd %332 %350 %367
%371 = OpFAdd %332 %351 %368
%372 = OpShiftLeftLogical %5 %196 %98
%373 = OpShiftRightLogical %9 %155 %166
%374 = OpCompositeExtract %5 %373 0
%375 = OpCompositeExtract %5 %373 1
%376 = OpIAdd %5 %196 %374
%377 = OpULessThan %200 %196 %375
%378 = OpSelect %5 %377 %376 %203
%380 = OpAccessChain %379 %139 %101 %378
%381 = OpLoad %37 %380
%383 = OpBitcast %382 %381
%384 = OpCompositeExtract %207 %383 0
%385 = OpCompositeExtract %207 %383 1
%386 = OpCompositeExtract %207 %383 2
%387 = OpCompositeExtract %207 %383 3
%388 = OpFConvert %332 %384
%389 = OpFConvert %332 %385
%390 = OpFConvert %332 %386
%391 = OpFConvert %332 %387
%392 = OpFAdd %332 %369 %388
%393 = OpFAdd %332 %370 %389
%394 = OpFAdd %332 %371 %390
%395 = OpShiftRightLogical %9 %155 %166
%396 = OpCompositeExtract %5 %395 0
%397 = OpCompositeExtract %5 %395 1
%398 = OpIAdd %5 %196 %396
%399 = OpULessThan %200 %196 %397
%400 = OpSelect %5 %399 %398 %203
%401 = OpAccessChain %204 %124 %101 %400
%402 = OpLoad %14 %401
%403 = OpConvertUToF %332 %402
%404 = OpFAdd %332 %392 %403
%405 = OpFAdd %332 %393 %403
%406 = OpFAdd %332 %394 %403
%407 = OpShiftRightLogical %9 %155 %166
%408 = OpCompositeExtract %5 %407 0
%409 = OpCompositeExtract %5 %407 1
%410 = OpIAdd %5 %196 %408
%411 = OpULessThan %200 %196 %409
%412 = OpSelect %5 %411 %410 %203
%413 = OpAccessChain %341 %129 %101 %412
%414 = OpLoad %25 %413
%415 = OpCompositeExtract %14 %414 0
%416 = OpCompositeExtract %14 %414 1
%417 = OpConvertUToF %332 %415
%418 = OpConvertUToF %332 %416
%419 = OpFAdd %332 %404 %417
%420 = OpFAdd %332 %405 %417
%421 = OpFAdd %332 %406 %418
%422 = OpShiftRightLogical %9 %155 %166
%423 = OpCompositeExtract %5 %422 0
%424 = OpCompositeExtract %5 %422 1
%425 = OpIAdd %5 %196 %423
%426 = OpULessThan %200 %196 %424
%427 = OpSelect %5 %426 %425 %203
%428 = OpAccessChain %359 %134 %101 %427
%429 = OpLoad %31 %428
%430 = OpCompositeExtract %14 %429 0
%431 = OpCompositeExtract %14 %429 1
%432 = OpCompositeExtract %14 %429 2
%433 = OpConvertUToF %332 %430
%434 = OpConvertUToF %332 %431
%435 = OpConvertUToF %332 %432
%436 = OpFAdd %332 %419 %433
%437 = OpFAdd %332 %420 %434
%438 = OpFAdd %332 %421 %435
%439 = OpShiftRightLogical %9 %155 %166
%440 = OpCompositeExtract %5 %439 0
%441 = OpCompositeExtract %5 %439 1
%442 = OpIAdd %5 %196 %440
%443 = OpULessThan %200 %196 %441
%444 = OpSelect %5 %443 %442 %203
%445 = OpAccessChain %379 %139 %101 %444
%446 = OpLoad %37 %445
%447 = OpCompositeExtract %14 %446 0
%448 = OpCompositeExtract %14 %446 1
%449 = OpCompositeExtract %14 %446 2
%450 = OpCompositeExtract %14 %446 3
%451 = OpConvertUToF %332 %447
%452 = OpConvertUToF %332 %448
%453 = OpConvertUToF %332 %449
%454 = OpConvertUToF %332 %450
%455 = OpFAdd %332 %436 %451
%456 = OpFAdd %332 %437 %452
%457 = OpFAdd %332 %438 %453
%458 = OpShiftRightLogical %9 %122 %166
%459 = OpCompositeExtract %5 %458 0
%460 = OpCompositeExtract %5 %458 1
%461 = OpIAdd %5 %196 %459
%462 = OpULessThan %200 %196 %460
%463 = OpSelect %5 %462 %461 %203
%464 = OpBitcast %14 %210
%465 = OpAccessChain %204 %103 %101 %463
OpStore %465 %464
%466 = OpShiftRightLogical %9 %122 %166
%467 = OpCompositeExtract %5 %466 0
%468 = OpCompositeExtract %5 %466 1
%469 = OpIAdd %5 %196 %467
%470 = OpULessThan %200 %196 %468
%471 = OpSelect %5 %470 %469 %203
%473 = OpBitcast %14 %472
%475 = OpBitcast %14 %474
%476 = OpCompositeConstruct %25 %473 %475
%477 = OpAccessChain %341 %108 %101 %471
OpStore %477 %476
%478 = OpShiftRightLogical %9 %122 %166
%479 = OpCompositeExtract %5 %478 0
%480 = OpCompositeExtract %5 %478 1
%481 = OpIAdd %5 %196 %479
%482 = OpULessThan %200 %196 %480
%483 = OpSelect %5 %482 %481 %203
%484 = OpBitcast %14 %474
%486 = OpBitcast %14 %485
%488 = OpBitcast %14 %487
%489 = OpCompositeConstruct %31 %484 %486 %488
%490 = OpAccessChain %359 %112 %101 %483
OpStore %490 %489
%491 = OpShiftRightLogical %9 %122 %166
%492 = OpCompositeExtract %5 %491 0
%493 = OpCompositeExtract %5 %491 1
%494 = OpIAdd %5 %196 %492
%495 = OpULessThan %200 %196 %493
%496 = OpSelect %5 %495 %494 %203
%498 = OpBitcast %14 %497
%500 = OpBitcast %14 %499
%502 = OpBitcast %14 %501
%504 = OpBitcast %14 %503
%505 = OpCompositeConstruct %37 %498 %500 %502 %504
%506 = OpAccessChain %379 %116 %101 %496
OpStore %506 %505
%507 = OpShiftRightLogical %9 %102 %166
%508 = OpCompositeExtract %5 %507 0
%509 = OpCompositeExtract %5 %507 1
%510 = OpIAdd %5 %196 %508
%511 = OpULessThan %200 %196 %509
%512 = OpSelect %5 %511 %510 %203
%514 = OpAccessChain %204 %75 %101 %512
OpStore %514 %513
%515 = OpShiftRightLogical %9 %102 %166
%516 = OpCompositeExtract %5 %515 0
%517 = OpCompositeExtract %5 %515 1
%518 = OpIAdd %5 %196 %516
%519 = OpULessThan %200 %196 %517
%520 = OpSelect %5 %519 %518 %203
%521 = OpCompositeConstruct %25 %233 %305
%522 = OpAccessChain %341 %83 %101 %520
OpStore %522 %521
%523 = OpShiftRightLogical %9 %102 %166
%524 = OpCompositeExtract %5 %523 0
%525 = OpCompositeExtract %5 %523 1
%526 = OpIAdd %5 %196 %524
%527 = OpULessThan %200 %196 %525
%528 = OpSelect %5 %527 %526 %203
%531 = OpCompositeConstruct %31 %305 %529 %530
%532 = OpAccessChain %359 %88 %101 %528
OpStore %532 %531
%533 = OpShiftRightLogical %9 %102 %166
%534 = OpCompositeExtract %5 %533 0
%535 = OpCompositeExtract %5 %533 1
%536 = OpIAdd %5 %196 %534
%537 = OpULessThan %200 %196 %535
%538 = OpSelect %5 %537 %536 %203
%543 = OpCompositeConstruct %37 %539 %540 %541 %542
%544 = OpAccessChain %379 %93 %101 %538
OpStore %544 %543
%545 = OpShiftRightLogical %9 %155 %546
%547 = OpCompositeExtract %5 %545 0
%548 = OpCompositeExtract %5 %545 1
%549 = OpIAdd %5 %196 %547
%550 = OpULessThan %200 %196 %548
%551 = OpSelect %5 %550 %549 %552
%554 = OpAccessChain %553 %144 %101 %551
%555 = OpLoad %5 %554
%556 = OpBitcast %332 %555
%557 = OpFAdd %332 %455 %556
%558 = OpFAdd %332 %456 %556
%559 = OpFAdd %332 %457 %556
%560 = OpIAdd %5 %196 %101
%562 = OpAccessChain %76 %8 %78
%563 = OpLoad %5 %562
%564 = OpIAdd %5 %563 %560
%561 = OpAccessChain %123 %24 %564
%566 = OpAccessChain %76 %8 %78
%567 = OpLoad %5 %566
%568 = OpIAdd %5 %567 %560
%565 = OpAccessChain %128 %30 %568
%569 = OpAccessChain %99 %13 %101 %568
%570 = OpLoad %9 %569
%571 = OpIMul %5 %196 %171
%572 = OpShiftRightLogical %9 %570 %166
%573 = OpCompositeExtract %5 %572 0
%574 = OpCompositeExtract %5 %572 1
%575 = OpIAdd %5 %571 %573
%576 = OpULessThan %200 %571 %574
%577 = OpSelect %5 %576 %575 %203
%578 = OpAccessChain %204 %561 %101 %577
%579 = OpLoad %14 %578
%580 = OpBitcast %207 %579
%581 = OpFConvert %332 %580
%582 = OpFAdd %332 %557 %581
%583 = OpFAdd %332 %558 %581
%584 = OpFAdd %332 %559 %581
%585 = OpFConvert %207 %582
%586 = OpFConvert %207 %583
%587 = OpIMul %5 %196 %171
%588 = OpShiftRightLogical %9 %570 %166
%589 = OpCompositeExtract %5 %588 0
%590 = OpCompositeExtract %5 %588 1
%591 = OpIAdd %5 %587 %589
%592 = OpULessThan %200 %587 %590
%593 = OpSelect %5 %592 %591 %203
%594 = OpBitcast %14 %585
%595 = OpBitcast %14 %586
%596 = OpCompositeConstruct %25 %594 %595
%597 = OpAccessChain %341 %565 %101 %593
OpStore %597 %596
%598 = OpCompositeExtract %5 %190 1
%599 = OpUDiv %5 %598 %165
%600 = OpConvertUToF %332 %599
%601 = OpFAdd %332 %600 %582
%602 = OpFAdd %332 %583 %603
%604 = OpCompositeExtract %5 %164 1
%605 = OpUDiv %5 %604 %78
%606 = OpConvertUToF %332 %605
%607 = OpFAdd %332 %584 %606
%608 = OpFAdd %332 %333 %609
%610 = OpFAdd %332 %608 %349
%611 = OpFAdd %332 %610 %366
%612 = OpFAdd %332 %611 %391
%613 = OpFAdd %332 %612 %403
%614 = OpFAdd %332 %613 %418
%615 = OpFAdd %332 %614 %433
%616 = OpFAdd %332 %615 %454
%617 = OpFAdd %332 %616 %556
%618 = OpFAdd %332 %617 %581
%619 = OpCompositeExtract %5 %122 1
%620 = OpIMul %5 %619 %621
%622 = OpConvertUToF %332 %620
%623 = OpFAdd %332 %601 %622
%624 = OpConvertFToU %5 %623
%625 = OpConvertFToU %5 %602
%626 = OpConvertFToU %5 %607
%627 = OpConvertFToU %5 %618
%628 = OpShiftLeftLogical %5 %196 %78
%629 = OpShiftRightLogical %9 %155 %546
%630 = OpCompositeExtract %5 %629 0
%631 = OpCompositeExtract %5 %629 1
%632 = OpIAdd %5 %196 %630
%633 = OpULessThan %200 %196 %631
%634 = OpSelect %5 %633 %632 %552
%635 = OpCompositeConstruct %48 %624 %625 %626 %627
%637 = OpAccessChain %636 %149 %101 %634
OpStore %637 %635
OpReturn
OpFunctionEnd
#endif
