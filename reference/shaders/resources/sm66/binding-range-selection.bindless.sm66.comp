#version 460
#extension GL_EXT_buffer_reference : require
#extension GL_EXT_nonuniform_qualifier : require
layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(buffer_reference) buffer AtomicCounter;
layout(buffer_reference, std430) buffer AtomicCounter
{
    uint _m0;
};

layout(set = 7, binding = 0, std430) readonly buffer AtomicCounters
{
    AtomicCounter counters[];
} _18;

layout(push_constant, std430) uniform RootConstants
{
    uint _m0;
    uint _m1;
    uint _m2;
    uint _m3;
    uint _m4;
    uint _m5;
    uint _m6;
    uint _m7;
} registers;

layout(set = 4, binding = 0, r32ui) uniform readonly writeonly uimageBuffer _12[];
layout(set = 3, binding = 0) uniform writeonly image2D _23[];

void main()
{
    if (gl_GlobalInvocationID.x > 80u)
    {
        imageStore(_23[registers._m3 + 6u], ivec2(uvec2(gl_GlobalInvocationID.x, 0u)), vec4(0.0));
    }
    if (gl_GlobalInvocationID.x > 90u)
    {
        imageStore(_23[registers._m3 + ((gl_GlobalInvocationID.x & 1u) + 7u)], ivec2(uvec2(0u, gl_GlobalInvocationID.x)), vec4(0.0));
    }
    uint _74 = atomicAdd(_18.counters[registers._m4]._m0, 1u);
}


#if 0
// SPIR-V disassembly
; SPIR-V
; Version: 1.3
; Generator: Unknown(30017); 21022
; Bound: 81
; Schema: 0
OpCapability Shader
OpCapability StorageImageArrayDynamicIndexing
OpCapability ImageBuffer
OpCapability StorageImageWriteWithoutFormat
OpCapability RuntimeDescriptorArray
OpCapability PhysicalStorageBufferAddresses
OpExtension "SPV_EXT_descriptor_indexing"
OpExtension "SPV_KHR_physical_storage_buffer"
OpMemoryModel PhysicalStorageBuffer64 GLSL450
OpEntryPoint GLCompute %3 "main" %26
OpExecutionMode %3 LocalSize 1 1 1
OpName %3 "main"
OpName %6 "RootConstants"
OpName %8 "registers"
OpName %13 "AtomicCounter"
OpName %16 "AtomicCounters"
OpMemberName %16 0 "counters"
OpDecorate %6 Block
OpMemberDecorate %6 0 Offset 0
OpMemberDecorate %6 1 Offset 4
OpMemberDecorate %6 2 Offset 8
OpMemberDecorate %6 3 Offset 12
OpMemberDecorate %6 4 Offset 16
OpMemberDecorate %6 5 Offset 20
OpMemberDecorate %6 6 Offset 24
OpMemberDecorate %6 7 Offset 28
OpDecorate %12 DescriptorSet 4
OpDecorate %12 Binding 0
OpDecorate %12 NonReadable
OpDecorate %12 NonWritable
OpDecorate %13 Block
OpMemberDecorate %13 0 Offset 0
OpDecorate %15 ArrayStride 8
OpDecorate %16 Block
OpMemberDecorate %16 0 Offset 0
OpMemberDecorate %16 0 NonWritable
OpDecorate %18 DescriptorSet 7
OpDecorate %18 Binding 0
OpDecorate %18 AliasedPointer
OpDecorate %23 DescriptorSet 3
OpDecorate %23 Binding 0
OpDecorate %23 NonReadable
OpDecorate %26 BuiltIn GlobalInvocationId
%1 = OpTypeVoid
%2 = OpTypeFunction %1
%5 = OpTypeInt 32 0
%6 = OpTypeStruct %5 %5 %5 %5 %5 %5 %5 %5
%7 = OpTypePointer PushConstant %6
%8 = OpVariable %7 PushConstant
%9 = OpTypeImage %5 Buffer 0 0 0 2 R32ui
%10 = OpTypeRuntimeArray %9
%11 = OpTypePointer UniformConstant %10
%12 = OpVariable %11 UniformConstant
%13 = OpTypeStruct %5
%14 = OpTypePointer PhysicalStorageBuffer %13
%15 = OpTypeRuntimeArray %14
%16 = OpTypeStruct %15
%17 = OpTypePointer StorageBuffer %16
%18 = OpVariable %17 StorageBuffer
%19 = OpTypeFloat 32
%20 = OpTypeImage %19 2D 0 0 0 2 Unknown
%21 = OpTypeRuntimeArray %20
%22 = OpTypePointer UniformConstant %21
%23 = OpVariable %22 UniformConstant
%24 = OpTypeVector %5 3
%25 = OpTypePointer Input %24
%26 = OpVariable %25 Input
%27 = OpTypePointer Input %5
%29 = OpConstant %5 0
%31 = OpTypeBool
%33 = OpConstant %5 80
%34 = OpTypePointer UniformConstant %20
%36 = OpTypePointer PushConstant %5
%38 = OpConstant %5 3
%41 = OpConstant %5 6
%43 = OpConstant %19 0
%44 = OpTypeVector %5 2
%46 = OpTypeVector %19 4
%49 = OpConstant %5 90
%51 = OpConstant %5 1
%53 = OpConstant %5 7
%61 = OpTypePointer UniformConstant %9
%64 = OpConstant %5 4
%67 = OpTypePointer StorageBuffer %14
%72 = OpTypePointer PhysicalStorageBuffer %5
%3 = OpFunction %1 None %2
%4 = OpLabel
OpBranch %75
%75 = OpLabel
%28 = OpAccessChain %27 %26 %29
%30 = OpLoad %5 %28
%32 = OpUGreaterThan %31 %30 %33
OpSelectionMerge %77 None
OpBranchConditional %32 %76 %77
%76 = OpLabel
%37 = OpAccessChain %36 %8 %38
%39 = OpLoad %5 %37
%40 = OpIAdd %5 %39 %41
%35 = OpAccessChain %34 %23 %40
%42 = OpLoad %20 %35
%45 = OpCompositeConstruct %44 %30 %29
%47 = OpCompositeConstruct %46 %43 %43 %43 %43
OpImageWrite %42 %45 %47
OpBranch %77
%77 = OpLabel
%48 = OpUGreaterThan %31 %30 %49
OpSelectionMerge %79 None
OpBranchConditional %48 %78 %79
%78 = OpLabel
%50 = OpBitwiseAnd %5 %30 %51
%52 = OpIAdd %5 %50 %53
%55 = OpAccessChain %36 %8 %38
%56 = OpLoad %5 %55
%57 = OpIAdd %5 %56 %52
%54 = OpAccessChain %34 %23 %57
%58 = OpLoad %20 %54
%59 = OpCompositeConstruct %44 %29 %30
%60 = OpCompositeConstruct %46 %43 %43 %43 %43
OpImageWrite %58 %59 %60
OpBranch %79
%79 = OpLabel
%63 = OpAccessChain %36 %8 %64
%65 = OpLoad %5 %63
%62 = OpAccessChain %61 %12 %65
%66 = OpLoad %9 %62
%69 = OpAccessChain %36 %8 %64
%70 = OpLoad %5 %69
%68 = OpAccessChain %67 %18 %29 %70
%71 = OpLoad %14 %68
%73 = OpAccessChain %72 %71 %29
%74 = OpAtomicIAdd %5 %73 %51 %29 %51
OpReturn
OpFunctionEnd
#endif
