#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_buffer_reference : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_KHR_shader_subgroup_ballot : require

struct _20
{
    vec4 _m0;
};

struct _23
{
    float _m0;
};

layout(set = 0, binding = 0, std430) restrict readonly buffer RTASHeap
{
    uvec2 _m0[];
} _13;

layout(push_constant, std430) uniform RootConstants
{
    uint _m0;
    uint _m1;
    uint _m2;
    uint _m3;
    uint _m4;
    uint _m5;
    uint _m6;
    uint _m7;
} registers;

layout(set = 3, binding = 0) uniform writeonly image2D _18[];
layout(location = 0) rayPayloadEXT _20 _22;
layout(location = 1) rayPayloadEXT _23 _25;

void main()
{
    traceRayEXT(accelerationStructureEXT(_13._m0[subgroupBroadcastFirst(registers._m0 + 30u)]), 0u, 0u, 0u, 0u, 0u, vec3(1.0, 2.0, 3.0), 1.0, vec3(0.0, 0.0, 1.0), 4.0, 0);
    traceRayEXT(accelerationStructureEXT(_13._m0[subgroupBroadcastFirst(registers._m0 + 30u)]), 0u, 1u, 0u, 0u, 0u, vec3(1.0, 2.0, 3.0), 1.0, vec3(0.0, 0.0, 1.0), 4.0, 1);
    imageStore(_18[registers._m3 + 10u], ivec2(uvec2(0u)), vec4(_22._m0.x + _25._m0, _22._m0.y + _25._m0, _22._m0.z + _25._m0, _22._m0.w + _25._m0));
}


#if 0
// SPIR-V disassembly
; SPIR-V
; Version: 1.4
; Generator: Unknown(30017); 21022
; Bound: 101
; Schema: 0
OpCapability Shader
OpCapability UniformBufferArrayDynamicIndexing
OpCapability SampledImageArrayDynamicIndexing
OpCapability StorageBufferArrayDynamicIndexing
OpCapability StorageImageArrayDynamicIndexing
OpCapability StorageImageWriteWithoutFormat
OpCapability GroupNonUniformBallot
OpCapability RayTracingKHR
OpCapability RuntimeDescriptorArray
OpCapability UniformBufferArrayNonUniformIndexing
OpCapability SampledImageArrayNonUniformIndexing
OpCapability StorageBufferArrayNonUniformIndexing
OpCapability StorageImageArrayNonUniformIndexing
OpCapability PhysicalStorageBufferAddresses
OpExtension "SPV_EXT_descriptor_indexing"
OpExtension "SPV_KHR_physical_storage_buffer"
OpExtension "SPV_KHR_ray_tracing"
OpMemoryModel PhysicalStorageBuffer64 GLSL450
OpEntryPoint RayGenerationNV %3 "main" %8 %13 %18 %22 %25
OpName %3 "main"
OpName %6 "RootConstants"
OpName %8 "registers"
OpName %11 "RTASHeap"
OpName %20 ""
OpName %23 ""
OpDecorate %6 Block
OpMemberDecorate %6 0 Offset 0
OpMemberDecorate %6 1 Offset 4
OpMemberDecorate %6 2 Offset 8
OpMemberDecorate %6 3 Offset 12
OpMemberDecorate %6 4 Offset 16
OpMemberDecorate %6 5 Offset 20
OpMemberDecorate %6 6 Offset 24
OpMemberDecorate %6 7 Offset 28
OpDecorate %10 ArrayStride 8
OpMemberDecorate %11 0 Offset 0
OpDecorate %11 Block
OpDecorate %13 DescriptorSet 0
OpDecorate %13 Binding 0
OpDecorate %13 NonWritable
OpDecorate %13 Restrict
OpDecorate %18 DescriptorSet 3
OpDecorate %18 Binding 0
OpDecorate %18 NonReadable
%1 = OpTypeVoid
%2 = OpTypeFunction %1
%5 = OpTypeInt 32 0
%6 = OpTypeStruct %5 %5 %5 %5 %5 %5 %5 %5
%7 = OpTypePointer PushConstant %6
%8 = OpVariable %7 PushConstant
%9 = OpTypeVector %5 2
%10 = OpTypeRuntimeArray %9
%11 = OpTypeStruct %10
%12 = OpTypePointer StorageBuffer %11
%13 = OpVariable %12 StorageBuffer
%14 = OpTypeFloat 32
%15 = OpTypeImage %14 2D 0 0 0 2 Unknown
%16 = OpTypeRuntimeArray %15
%17 = OpTypePointer UniformConstant %16
%18 = OpVariable %17 UniformConstant
%19 = OpTypeVector %14 4
%20 = OpTypeStruct %19
%21 = OpTypePointer RayPayloadNV %20
%22 = OpVariable %21 RayPayloadNV
%23 = OpTypeStruct %14
%24 = OpTypePointer RayPayloadNV %23
%25 = OpVariable %24 RayPayloadNV
%26 = OpTypePointer PushConstant %5
%28 = OpConstant %5 0
%31 = OpConstant %5 30
%33 = OpConstant %5 3
%34 = OpTypePointer StorageBuffer %9
%37 = OpTypeAccelerationStructureKHR
%46 = OpConstant %14 1
%47 = OpConstant %14 0
%48 = OpConstant %14 2
%49 = OpConstant %14 3
%50 = OpConstant %14 4
%51 = OpTypeVector %14 3
%68 = OpConstant %5 1
%71 = OpTypePointer RayPayloadNV %19
%78 = OpTypePointer RayPayloadNV %14
%85 = OpTypePointer UniformConstant %15
%90 = OpConstant %5 10
%3 = OpFunction %1 None %2
%4 = OpLabel
OpBranch %99
%99 = OpLabel
%27 = OpAccessChain %26 %8 %28
%29 = OpLoad %5 %27
%30 = OpIAdd %5 %29 %31
%32 = OpGroupNonUniformBroadcastFirst %5 %33 %30
%35 = OpAccessChain %34 %13 %28 %32
%36 = OpLoad %9 %35
%38 = OpConvertUToAccelerationStructureKHR %37 %36
%39 = OpAccessChain %26 %8 %28
%40 = OpLoad %5 %39
%41 = OpIAdd %5 %40 %31
%42 = OpGroupNonUniformBroadcastFirst %5 %33 %41
%43 = OpAccessChain %34 %13 %28 %42
%44 = OpLoad %9 %43
%45 = OpConvertUToAccelerationStructureKHR %37 %44
%52 = OpCompositeConstruct %51 %46 %48 %49
%53 = OpCompositeConstruct %51 %47 %47 %46
OpTraceRayKHR %45 %28 %28 %28 %28 %28 %52 %46 %53 %50 %22
%54 = OpAccessChain %26 %8 %28
%55 = OpLoad %5 %54
%56 = OpIAdd %5 %55 %31
%57 = OpGroupNonUniformBroadcastFirst %5 %33 %56
%58 = OpAccessChain %34 %13 %28 %57
%59 = OpLoad %9 %58
%60 = OpConvertUToAccelerationStructureKHR %37 %59
%61 = OpAccessChain %26 %8 %28
%62 = OpLoad %5 %61
%63 = OpIAdd %5 %62 %31
%64 = OpGroupNonUniformBroadcastFirst %5 %33 %63
%65 = OpAccessChain %34 %13 %28 %64
%66 = OpLoad %9 %65
%67 = OpConvertUToAccelerationStructureKHR %37 %66
%69 = OpCompositeConstruct %51 %46 %48 %49
%70 = OpCompositeConstruct %51 %47 %47 %46
OpTraceRayKHR %67 %28 %68 %28 %28 %28 %69 %46 %70 %50 %25
%72 = OpInBoundsAccessChain %71 %22 %28
%73 = OpLoad %19 %72
%74 = OpCompositeExtract %14 %73 0
%75 = OpCompositeExtract %14 %73 1
%76 = OpCompositeExtract %14 %73 2
%77 = OpCompositeExtract %14 %73 3
%79 = OpInBoundsAccessChain %78 %25 %28
%80 = OpLoad %14 %79
%81 = OpFAdd %14 %74 %80
%82 = OpFAdd %14 %75 %80
%83 = OpFAdd %14 %76 %80
%84 = OpFAdd %14 %77 %80
%87 = OpAccessChain %26 %8 %33
%88 = OpLoad %5 %87
%89 = OpIAdd %5 %88 %90
%86 = OpAccessChain %85 %18 %89
%91 = OpLoad %15 %86
%93 = OpAccessChain %26 %8 %33
%94 = OpLoad %5 %93
%95 = OpIAdd %5 %94 %90
%92 = OpAccessChain %85 %18 %95
%96 = OpLoad %15 %92
%97 = OpCompositeConstruct %9 %28 %28
%98 = OpCompositeConstruct %19 %81 %82 %83 %84
OpImageWrite %96 %97 %98
OpReturn
OpFunctionEnd
#endif
