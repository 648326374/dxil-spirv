#version 460
layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(set = 0, binding = 0, r32ui) uniform uimageBuffer _8;

void main()
{
    uint _22;
    if (!(gl_GlobalInvocationID.x == 0u))
    {
        uint _23;
        uint _30;
        uint _28 = 0u;
        uint _29 = 0u;
        bool _35;
        for (;;)
        {
            _35 = imageLoad(_8, int((_29 << 2u) >> 2u)).x == 40u;
            uint frontier_phi_9_pred;
            uint frontier_phi_9_pred_1;
            for (;;)
            {
                uint _53;
                if (_35)
                {
                    if (_29 == 10u)
                    {
                        imageStore(_8, int(2560u >> 2u), uvec4(10u));
                        frontier_phi_9_pred = _28;
                        frontier_phi_9_pred_1 = gl_GlobalInvocationID.y * 10u;
                        break;
                    }
                    _53 = imageLoad(_8, int((_29 << 4u) >> 2u)).x;
                }
                else
                {
                    _53 = imageLoad(_8, int((_29 * 12u) >> 2u)).x;
                }
                frontier_phi_9_pred = (_53 + _28) + imageLoad(_8, int((_29 << 3u) >> 2u)).x;
                frontier_phi_9_pred_1 = _29 + 1u;
                break;
            }
            _23 = frontier_phi_9_pred;
            _30 = frontier_phi_9_pred_1;
            if (_30 < gl_GlobalInvocationID.x)
            {
                _28 = _23;
                _29 = _30;
                continue;
            }
            else
            {
                break;
            }
        }
        _22 = _23;
    }
    else
    {
        _22 = 0u;
    }
    imageStore(_8, int(0u >> 2u), uvec4(_22));
}


#if 0
// SPIR-V disassembly
; SPIR-V
; Version: 1.3
; Generator: Unknown(30017); 21022
; Bound: 81
; Schema: 0
OpCapability Shader
OpCapability ImageBuffer
OpMemoryModel Logical GLSL450
OpEntryPoint GLCompute %3 "main" %12
OpExecutionMode %3 LocalSize 1 1 1
OpName %3 "main"
OpName %63 "frontier_phi_9.pred"
OpName %64 "frontier_phi_9.pred"
OpDecorate %8 DescriptorSet 0
OpDecorate %8 Binding 0
OpDecorate %12 BuiltIn GlobalInvocationId
%1 = OpTypeVoid
%2 = OpTypeFunction %1
%5 = OpTypeInt 32 0
%6 = OpTypeImage %5 Buffer 0 0 0 2 R32ui
%7 = OpTypePointer UniformConstant %6
%8 = OpVariable %7 UniformConstant
%10 = OpTypeVector %5 3
%11 = OpTypePointer Input %10
%12 = OpVariable %11 Input
%13 = OpTypePointer Input %5
%15 = OpConstant %5 0
%18 = OpConstant %5 1
%20 = OpTypeBool
%25 = OpConstant %5 2
%26 = OpTypeVector %5 4
%36 = OpConstant %5 40
%38 = OpConstant %5 10
%40 = OpConstant %5 12
%44 = OpConstant %5 2560
%49 = OpConstant %5 4
%56 = OpConstant %5 3
%3 = OpFunction %1 None %2
%4 = OpLabel
OpBranch %65
%65 = OpLabel
%9 = OpLoad %6 %8
%14 = OpAccessChain %13 %12 %15
%16 = OpLoad %5 %14
%17 = OpAccessChain %13 %12 %18
%19 = OpLoad %5 %17
%21 = OpIEqual %20 %16 %15
OpSelectionMerge %78 None
OpBranchConditional %21 %78 %66
%66 = OpLabel
OpBranch %67
%67 = OpLabel
%28 = OpPhi %5 %15 %66 %23 %76
%29 = OpPhi %5 %15 %66 %30 %76
%31 = OpShiftLeftLogical %5 %29 %25
%32 = OpShiftRightLogical %5 %31 %25
%33 = OpImageRead %26 %9 %32
%34 = OpCompositeExtract %5 %33 0
%35 = OpIEqual %20 %34 %36
OpLoopMerge %77 %76 None
OpBranch %68
%68 = OpLabel
OpLoopMerge %75 %79 None
OpBranch %69
%69 = OpLabel
OpSelectionMerge %73 None
OpBranchConditional %35 %71 %70
%71 = OpLabel
%37 = OpIEqual %20 %29 %38
OpSelectionMerge %72 None
OpBranchConditional %37 %74 %72
%74 = OpLabel
%45 = OpShiftRightLogical %5 %44 %25
%46 = OpCompositeConstruct %26 %38 %38 %38 %38
OpImageWrite %9 %45 %46
%47 = OpIMul %5 %19 %38
OpBranch %75
%72 = OpLabel
%48 = OpShiftLeftLogical %5 %29 %49
%50 = OpShiftRightLogical %5 %48 %25
%51 = OpImageRead %26 %9 %50
%52 = OpCompositeExtract %5 %51 0
OpBranch %73
%70 = OpLabel
%39 = OpIMul %5 %29 %40
%41 = OpShiftRightLogical %5 %39 %25
%42 = OpImageRead %26 %9 %41
%43 = OpCompositeExtract %5 %42 0
OpBranch %73
%73 = OpLabel
%53 = OpPhi %5 %43 %70 %52 %72
%54 = OpIAdd %5 %53 %28
%55 = OpShiftLeftLogical %5 %29 %56
%57 = OpShiftRightLogical %5 %55 %25
%58 = OpImageRead %26 %9 %57
%59 = OpCompositeExtract %5 %58 0
%60 = OpIAdd %5 %54 %59
%61 = OpIAdd %5 %29 %18
OpBranch %75
%79 = OpLabel
OpBranch %68
%75 = OpLabel
%63 = OpPhi %5 %28 %74 %60 %73
%64 = OpPhi %5 %47 %74 %61 %73
%23 = OpCopyObject %5 %63
%30 = OpCopyObject %5 %64
OpBranch %76
%76 = OpLabel
%62 = OpULessThan %20 %30 %16
OpBranchConditional %62 %67 %77
%77 = OpLabel
OpBranch %78
%78 = OpLabel
%22 = OpPhi %5 %15 %65 %23 %77
%24 = OpShiftRightLogical %5 %15 %25
%27 = OpCompositeConstruct %26 %22 %22 %22 %22
OpImageWrite %9 %24 %27
OpReturn
OpFunctionEnd
#endif
