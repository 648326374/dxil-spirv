#version 460
layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(set = 0, binding = 0, r32ui) uniform uimageBuffer _8;

uint _57;

void main()
{
    uint _19;
    if (!(gl_GlobalInvocationID.x == 0u))
    {
        uint _20;
        uint _25 = 0u;
        uint _26 = 0u;
        bool _32;
        for (;;)
        {
            _32 = imageLoad(_8, int((_26 << 2u) >> 2u)).x == 40u;
            uint frontier_phi_6_pred;
            for (;;)
            {
                uint _49;
                uint frontier_phi_8;
                if (_32)
                {
                    if (_26 == 10u)
                    {
                        frontier_phi_6_pred = _25;
                        break;
                    }
                    _49 = imageLoad(_8, int((_26 << 4u) >> 2u)).x;
                    frontier_phi_8 = _25;
                }
                else
                {
                    _49 = imageLoad(_8, int((_26 * 12u) >> 2u)).x;
                    frontier_phi_8 = _57;
                }
                frontier_phi_6_pred = (_49 + _25) + imageLoad(_8, int((_26 << 3u) >> 2u)).x;
                break;
            }
            _20 = frontier_phi_6_pred;
            uint _27 = _26 + 1u;
            if (_27 == gl_GlobalInvocationID.x)
            {
                break;
            }
            else
            {
                _25 = _20;
                _26 = _27;
                continue;
            }
        }
        _19 = _20;
    }
    else
    {
        _19 = 0u;
    }
    imageStore(_8, int(0u >> 2u), uvec4(_19));
}


#if 0
// SPIR-V disassembly
; SPIR-V
; Version: 1.3
; Generator: Unknown(30017); 21022
; Bound: 75
; Schema: 0
OpCapability Shader
OpCapability ImageBuffer
OpMemoryModel Logical GLSL450
OpEntryPoint GLCompute %3 "main" %12
OpExecutionMode %3 LocalSize 1 1 1
OpName %3 "main"
OpName %56 "frontier_phi_8"
OpName %59 "frontier_phi_6.pred"
OpDecorate %8 DescriptorSet 0
OpDecorate %8 Binding 0
OpDecorate %12 BuiltIn GlobalInvocationId
%1 = OpTypeVoid
%2 = OpTypeFunction %1
%5 = OpTypeInt 32 0
%6 = OpTypeImage %5 Buffer 0 0 0 2 R32ui
%7 = OpTypePointer UniformConstant %6
%8 = OpVariable %7 UniformConstant
%10 = OpTypeVector %5 3
%11 = OpTypePointer Input %10
%12 = OpVariable %11 Input
%13 = OpTypePointer Input %5
%15 = OpConstant %5 0
%17 = OpTypeBool
%22 = OpConstant %5 2
%23 = OpTypeVector %5 4
%33 = OpConstant %5 40
%35 = OpConstant %5 10
%37 = OpConstant %5 12
%42 = OpConstant %5 1
%45 = OpConstant %5 4
%52 = OpConstant %5 3
%58 = OpConstantTrue %17
%3 = OpFunction %1 None %2
%4 = OpLabel
%57 = OpUndef %5
OpBranch %60
%60 = OpLabel
%9 = OpLoad %6 %8
%14 = OpAccessChain %13 %12 %15
%16 = OpLoad %5 %14
%18 = OpIEqual %17 %16 %15
OpSelectionMerge %72 None
OpBranchConditional %18 %72 %61
%61 = OpLabel
OpBranch %62
%62 = OpLabel
%25 = OpPhi %5 %15 %61 %20 %70
%26 = OpPhi %5 %15 %61 %27 %70
%28 = OpShiftLeftLogical %5 %26 %22
%29 = OpShiftRightLogical %5 %28 %22
%30 = OpImageRead %23 %9 %29
%31 = OpCompositeExtract %5 %30 0
%32 = OpIEqual %17 %31 %33
OpLoopMerge %71 %70 None
OpBranch %63
%63 = OpLabel
OpLoopMerge %69 %73 None
OpBranch %64
%64 = OpLabel
OpSelectionMerge %68 None
OpBranchConditional %32 %66 %65
%66 = OpLabel
%34 = OpIEqual %17 %26 %35
OpSelectionMerge %67 None
OpBranchConditional %34 %69 %67
%67 = OpLabel
%44 = OpShiftLeftLogical %5 %26 %45
%46 = OpShiftRightLogical %5 %44 %22
%47 = OpImageRead %23 %9 %46
%48 = OpCompositeExtract %5 %47 0
OpBranch %68
%65 = OpLabel
%36 = OpIMul %5 %26 %37
%38 = OpShiftRightLogical %5 %36 %22
%39 = OpImageRead %23 %9 %38
%40 = OpCompositeExtract %5 %39 0
OpBranch %68
%68 = OpLabel
%49 = OpPhi %5 %40 %65 %48 %67
%56 = OpPhi %5 %57 %65 %25 %67
%50 = OpIAdd %5 %49 %25
%51 = OpShiftLeftLogical %5 %26 %52
%53 = OpShiftRightLogical %5 %51 %22
%54 = OpImageRead %23 %9 %53
%55 = OpCompositeExtract %5 %54 0
%41 = OpIAdd %5 %50 %55
OpBranch %69
%73 = OpLabel
OpBranch %63
%69 = OpLabel
%59 = OpPhi %5 %25 %66 %41 %68
%20 = OpCopyObject %5 %59
OpBranch %70
%70 = OpLabel
%27 = OpIAdd %5 %26 %42
%43 = OpIEqual %17 %27 %16
OpBranchConditional %43 %71 %62
%71 = OpLabel
OpBranch %72
%72 = OpLabel
%19 = OpPhi %5 %15 %60 %20 %71
%21 = OpShiftRightLogical %5 %15 %22
%24 = OpCompositeConstruct %23 %19 %19 %19 %19
OpImageWrite %9 %21 %24
OpReturn
OpFunctionEnd
#endif
