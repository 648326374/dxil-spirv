#version 460
#extension GL_KHR_shader_subgroup_arithmetic : require
layout(local_size_x = 64, local_size_y = 1, local_size_z = 1) in;

layout(set = 0, binding = 0, r32ui) uniform writeonly uimageBuffer _8;
layout(set = 0, binding = 1, r32ui) uniform writeonly uimageBuffer _9;
layout(set = 0, binding = 2, r32ui) uniform writeonly uimageBuffer _10;

void main()
{
    uint _23 = gl_GlobalInvocationID.x * 28u;
    imageStore(_8, int(_23 >> 2u), uvec4(subgroupAdd(gl_GlobalInvocationID.x)));
    uint _30 = _23 + 4u;
    imageStore(_8, int(_30 >> 2u), uvec4(subgroupMul(gl_GlobalInvocationID.x)));
    uint _35 = _23 + 8u;
    imageStore(_8, int(_35 >> 2u), uvec4(subgroupAnd(gl_GlobalInvocationID.x)));
    uint _40 = _23 + 12u;
    imageStore(_8, int(_40 >> 2u), uvec4(subgroupOr(gl_GlobalInvocationID.x)));
    uint _45 = _23 + 16u;
    imageStore(_8, int(_45 >> 2u), uvec4(subgroupXor(gl_GlobalInvocationID.x)));
    uint _50 = _23 + 20u;
    imageStore(_8, int(_50 >> 2u), uvec4(subgroupMin(gl_GlobalInvocationID.x)));
    uint _55 = _23 + 24u;
    imageStore(_8, int(_55 >> 2u), uvec4(subgroupMax(gl_GlobalInvocationID.x)));
    imageStore(_9, int(_23 >> 2u), uvec4(subgroupAdd(gl_GlobalInvocationID.x)));
    imageStore(_9, int(_30 >> 2u), uvec4(subgroupMul(gl_GlobalInvocationID.x)));
    imageStore(_9, int(_35 >> 2u), uvec4(subgroupAnd(gl_GlobalInvocationID.x)));
    imageStore(_9, int(_40 >> 2u), uvec4(subgroupOr(gl_GlobalInvocationID.x)));
    imageStore(_9, int(_45 >> 2u), uvec4(subgroupXor(gl_GlobalInvocationID.x)));
    imageStore(_9, int(_50 >> 2u), uvec4(uint(subgroupMin(int(gl_GlobalInvocationID.x)))));
    imageStore(_9, int(_55 >> 2u), uvec4(uint(subgroupMax(int(gl_GlobalInvocationID.x)))));
    float _81 = float(gl_GlobalInvocationID.x);
    imageStore(_10, int(_23 >> 2u), uvec4(uint(subgroupAdd(_81))));
    imageStore(_10, int(_30 >> 2u), uvec4(uint(subgroupMul(_81))));
    imageStore(_10, int(_50 >> 2u), uvec4(uint(subgroupMin(_81))));
    imageStore(_10, int(_55 >> 2u), uvec4(uint(subgroupMax(_81))));
}


#if 0
// SPIR-V disassembly
; SPIR-V
; Version: 1.3
; Generator: Unknown(30017); 21022
; Bound: 100
; Schema: 0
OpCapability Shader
OpCapability ImageBuffer
OpCapability GroupNonUniformArithmetic
OpMemoryModel Logical GLSL450
OpEntryPoint GLCompute %3 "main" %16
OpExecutionMode %3 LocalSize 64 1 1
OpName %3 "main"
OpDecorate %8 DescriptorSet 0
OpDecorate %8 Binding 0
OpDecorate %8 NonReadable
OpDecorate %9 DescriptorSet 0
OpDecorate %9 Binding 1
OpDecorate %9 NonReadable
OpDecorate %10 DescriptorSet 0
OpDecorate %10 Binding 2
OpDecorate %10 NonReadable
OpDecorate %16 BuiltIn GlobalInvocationId
%1 = OpTypeVoid
%2 = OpTypeFunction %1
%5 = OpTypeInt 32 0
%6 = OpTypeImage %5 Buffer 0 0 0 2 R32ui
%7 = OpTypePointer UniformConstant %6
%8 = OpVariable %7 UniformConstant
%9 = OpVariable %7 UniformConstant
%10 = OpVariable %7 UniformConstant
%14 = OpTypeVector %5 3
%15 = OpTypePointer Input %14
%16 = OpVariable %15 Input
%17 = OpTypePointer Input %5
%19 = OpConstant %5 0
%22 = OpConstant %5 3
%24 = OpConstant %5 28
%26 = OpConstant %5 2
%27 = OpTypeVector %5 4
%31 = OpConstant %5 4
%36 = OpConstant %5 8
%41 = OpConstant %5 12
%46 = OpConstant %5 16
%51 = OpConstant %5 20
%56 = OpConstant %5 24
%80 = OpTypeFloat 32
%3 = OpFunction %1 None %2
%4 = OpLabel
OpBranch %98
%98 = OpLabel
%11 = OpLoad %6 %10
%12 = OpLoad %6 %9
%13 = OpLoad %6 %8
%18 = OpAccessChain %17 %16 %19
%20 = OpLoad %5 %18
%21 = OpGroupNonUniformIAdd %5 %22 Reduce %20
%23 = OpIMul %5 %20 %24
%25 = OpShiftRightLogical %5 %23 %26
%28 = OpCompositeConstruct %27 %21 %21 %21 %21
OpImageWrite %13 %25 %28
%29 = OpGroupNonUniformIMul %5 %22 Reduce %20
%30 = OpIAdd %5 %23 %31
%32 = OpShiftRightLogical %5 %30 %26
%33 = OpCompositeConstruct %27 %29 %29 %29 %29
OpImageWrite %13 %32 %33
%34 = OpGroupNonUniformBitwiseAnd %5 %22 Reduce %20
%35 = OpIAdd %5 %23 %36
%37 = OpShiftRightLogical %5 %35 %26
%38 = OpCompositeConstruct %27 %34 %34 %34 %34
OpImageWrite %13 %37 %38
%39 = OpGroupNonUniformBitwiseOr %5 %22 Reduce %20
%40 = OpIAdd %5 %23 %41
%42 = OpShiftRightLogical %5 %40 %26
%43 = OpCompositeConstruct %27 %39 %39 %39 %39
OpImageWrite %13 %42 %43
%44 = OpGroupNonUniformBitwiseXor %5 %22 Reduce %20
%45 = OpIAdd %5 %23 %46
%47 = OpShiftRightLogical %5 %45 %26
%48 = OpCompositeConstruct %27 %44 %44 %44 %44
OpImageWrite %13 %47 %48
%49 = OpGroupNonUniformUMin %5 %22 Reduce %20
%50 = OpIAdd %5 %23 %51
%52 = OpShiftRightLogical %5 %50 %26
%53 = OpCompositeConstruct %27 %49 %49 %49 %49
OpImageWrite %13 %52 %53
%54 = OpGroupNonUniformUMax %5 %22 Reduce %20
%55 = OpIAdd %5 %23 %56
%57 = OpShiftRightLogical %5 %55 %26
%58 = OpCompositeConstruct %27 %54 %54 %54 %54
OpImageWrite %13 %57 %58
%59 = OpGroupNonUniformIAdd %5 %22 Reduce %20
%60 = OpShiftRightLogical %5 %23 %26
%61 = OpCompositeConstruct %27 %59 %59 %59 %59
OpImageWrite %12 %60 %61
%62 = OpGroupNonUniformIMul %5 %22 Reduce %20
%63 = OpShiftRightLogical %5 %30 %26
%64 = OpCompositeConstruct %27 %62 %62 %62 %62
OpImageWrite %12 %63 %64
%65 = OpGroupNonUniformBitwiseAnd %5 %22 Reduce %20
%66 = OpShiftRightLogical %5 %35 %26
%67 = OpCompositeConstruct %27 %65 %65 %65 %65
OpImageWrite %12 %66 %67
%68 = OpGroupNonUniformBitwiseOr %5 %22 Reduce %20
%69 = OpShiftRightLogical %5 %40 %26
%70 = OpCompositeConstruct %27 %68 %68 %68 %68
OpImageWrite %12 %69 %70
%71 = OpGroupNonUniformBitwiseXor %5 %22 Reduce %20
%72 = OpShiftRightLogical %5 %45 %26
%73 = OpCompositeConstruct %27 %71 %71 %71 %71
OpImageWrite %12 %72 %73
%74 = OpGroupNonUniformSMin %5 %22 Reduce %20
%75 = OpShiftRightLogical %5 %50 %26
%76 = OpCompositeConstruct %27 %74 %74 %74 %74
OpImageWrite %12 %75 %76
%77 = OpGroupNonUniformSMax %5 %22 Reduce %20
%78 = OpShiftRightLogical %5 %55 %26
%79 = OpCompositeConstruct %27 %77 %77 %77 %77
OpImageWrite %12 %78 %79
%81 = OpConvertUToF %80 %20
%82 = OpGroupNonUniformFAdd %80 %22 Reduce %81
%83 = OpConvertFToU %5 %82
%84 = OpShiftRightLogical %5 %23 %26
%85 = OpCompositeConstruct %27 %83 %83 %83 %83
OpImageWrite %11 %84 %85
%86 = OpGroupNonUniformFMul %80 %22 Reduce %81
%87 = OpConvertFToU %5 %86
%88 = OpShiftRightLogical %5 %30 %26
%89 = OpCompositeConstruct %27 %87 %87 %87 %87
OpImageWrite %11 %88 %89
%90 = OpGroupNonUniformFMin %80 %22 Reduce %81
%91 = OpConvertFToU %5 %90
%92 = OpShiftRightLogical %5 %50 %26
%93 = OpCompositeConstruct %27 %91 %91 %91 %91
OpImageWrite %11 %92 %93
%94 = OpGroupNonUniformFMax %80 %22 Reduce %81
%95 = OpConvertFToU %5 %94
%96 = OpShiftRightLogical %5 %55 %26
%97 = OpCompositeConstruct %27 %95 %95 %95 %95
OpImageWrite %11 %96 %97
OpReturn
OpFunctionEnd
#endif
