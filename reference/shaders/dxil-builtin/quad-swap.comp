#version 460
#extension GL_KHR_shader_subgroup_shuffle : require
layout(local_size_x = 64, local_size_y = 1, local_size_z = 1) in;

layout(set = 0, binding = 0, r32ui) uniform readonly uimageBuffer _8;
layout(set = 0, binding = 1, r32ui) uniform writeonly uimageBuffer _9;

void main()
{
    uvec4 _23 = imageLoad(_8, int((gl_GlobalInvocationID.x << 2u) >> 2u));
    uint _24 = _23.x;
    uint _32 = (gl_GlobalInvocationID.x << 4u) >> 2u;
    imageStore(_9, int(_32), uvec4(_24));
    imageStore(_9, int(_32 + 1u), uvec4(subgroupShuffleXor(_24, 1u)));
    imageStore(_9, int(_32 + 2u), uvec4(subgroupShuffleXor(_24, 2u)));
    imageStore(_9, int(_32 + 3u), uvec4(subgroupShuffleXor(_24, 3u)));
}


#if 0
// SPIR-V disassembly
; SPIR-V
; Version: 1.3
; Generator: Unknown(30017); 21022
; Bound: 42
; Schema: 0
OpCapability Shader
OpCapability ImageBuffer
OpCapability GroupNonUniformShuffle
OpMemoryModel Logical GLSL450
OpEntryPoint GLCompute %3 "main" %14
OpExecutionMode %3 LocalSize 64 1 1
OpName %3 "main"
OpDecorate %8 DescriptorSet 0
OpDecorate %8 Binding 0
OpDecorate %8 NonWritable
OpDecorate %9 DescriptorSet 0
OpDecorate %9 Binding 1
OpDecorate %9 NonReadable
OpDecorate %14 BuiltIn GlobalInvocationId
%1 = OpTypeVoid
%2 = OpTypeFunction %1
%5 = OpTypeInt 32 0
%6 = OpTypeImage %5 Buffer 0 0 0 2 R32ui
%7 = OpTypePointer UniformConstant %6
%8 = OpVariable %7 UniformConstant
%9 = OpVariable %7 UniformConstant
%12 = OpTypeVector %5 3
%13 = OpTypePointer Input %12
%14 = OpVariable %13 Input
%15 = OpTypePointer Input %5
%17 = OpConstant %5 0
%20 = OpConstant %5 2
%22 = OpTypeVector %5 4
%26 = OpConstant %5 3
%27 = OpConstant %5 1
%31 = OpConstant %5 4
%3 = OpFunction %1 None %2
%4 = OpLabel
OpBranch %40
%40 = OpLabel
%10 = OpLoad %6 %9
%11 = OpLoad %6 %8
%16 = OpAccessChain %15 %14 %17
%18 = OpLoad %5 %16
%19 = OpShiftLeftLogical %5 %18 %20
%21 = OpShiftRightLogical %5 %19 %20
%23 = OpImageRead %22 %11 %21
%24 = OpCompositeExtract %5 %23 0
%25 = OpGroupNonUniformShuffleXor %5 %26 %24 %27
%28 = OpGroupNonUniformShuffleXor %5 %26 %24 %20
%29 = OpGroupNonUniformShuffleXor %5 %26 %24 %26
%30 = OpShiftLeftLogical %5 %18 %31
%32 = OpShiftRightLogical %5 %30 %20
%33 = OpCompositeConstruct %22 %24 %24 %24 %24
OpImageWrite %10 %32 %33
%34 = OpCompositeConstruct %22 %25 %25 %25 %25
%35 = OpIAdd %5 %32 %27
OpImageWrite %10 %35 %34
%36 = OpCompositeConstruct %22 %28 %28 %28 %28
%37 = OpIAdd %5 %32 %20
OpImageWrite %10 %37 %36
%38 = OpCompositeConstruct %22 %29 %29 %29 %29
%39 = OpIAdd %5 %32 %26
OpImageWrite %10 %39 %38
OpReturn
OpFunctionEnd
#endif
