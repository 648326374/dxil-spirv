#version 460
#extension GL_KHR_shader_subgroup_basic : require
layout(local_size_x = 64, local_size_y = 1, local_size_z = 1) in;

layout(set = 0, binding = 0, r32ui) uniform writeonly uimageBuffer _8;

uint _17;

void main()
{
    if (subgroupElect())
    {
        imageStore(_8, int(0u >> 2u), uvec4(1u));
    }
    else
    {
        imageStore(_8, int(0u >> 2u), uvec4(0u));
    }
}


#if 0
// LLVM disassembly
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%struct.RWByteAddressBuffer = type { i32 }

define void @main() {
  %1 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 0, i32 0, i1 false)
  %2 = call i1 @dx.op.waveIsFirstLane(i32 110)
  br i1 %2, label %3, label %4

3:                                                ; preds = %0
  call void @dx.op.bufferStore.i32(i32 69, %dx.types.Handle %1, i32 0, i32 undef, i32 1, i32 undef, i32 undef, i32 undef, i8 1)
  br label %5

4:                                                ; preds = %0
  call void @dx.op.bufferStore.i32(i32 69, %dx.types.Handle %1, i32 0, i32 undef, i32 0, i32 undef, i32 undef, i32 undef, i8 1)
  br label %5

5:                                                ; preds = %4, %3
  ret void
}

; Function Attrs: nounwind
declare i1 @dx.op.waveIsFirstLane(i32) #0

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #1

; Function Attrs: nounwind
declare void @dx.op.bufferStore.i32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i8) #0

attributes #0 = { nounwind }
attributes #1 = { nounwind readonly }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.entryPoints = !{!7}

!0 = !{!"clang version 3.7 (tags/RELEASE_370/final)"}
!1 = !{i32 1, i32 0}
!2 = !{i32 1, i32 5}
!3 = !{!"cs", i32 6, i32 0}
!4 = !{null, !5, null, null}
!5 = !{!6}
!6 = !{i32 0, %struct.RWByteAddressBuffer* undef, !"", i32 0, i32 0, i32 1, i32 11, i1 false, i1 false, i1 false, null}
!7 = !{void ()* @main, !"main", null, !4, !8}
!8 = !{i32 0, i64 524304, i32 4, !9}
!9 = !{i32 64, i32 1, i32 1}
#endif
#if 0
// SPIR-V disassembly
; SPIR-V
; Version: 1.3
; Generator: Unknown(30017); 21022
; Bound: 27
; Schema: 0
OpCapability Shader
OpCapability ImageBuffer
OpCapability GroupNonUniform
OpMemoryModel Logical GLSL450
OpEntryPoint GLCompute %3 "main"
OpExecutionMode %3 LocalSize 64 1 1
OpName %3 "main"
OpDecorate %8 DescriptorSet 0
OpDecorate %8 Binding 0
%1 = OpTypeVoid
%2 = OpTypeFunction %1
%5 = OpTypeInt 32 0
%6 = OpTypeImage %5 Buffer 0 0 0 2 R32ui
%7 = OpTypePointer UniformConstant %6
%8 = OpVariable %7 UniformConstant
%10 = OpTypeBool
%12 = OpConstant %5 3
%13 = OpConstant %5 0
%15 = OpConstant %5 2
%16 = OpConstant %5 1
%18 = OpTypeVector %5 4
%3 = OpFunction %1 None %2
%4 = OpLabel
%17 = OpUndef %5
OpBranch %22
%22 = OpLabel
%9 = OpLoad %6 %8
%11 = OpGroupNonUniformElect %10 %12
OpSelectionMerge %25 None
OpBranchConditional %11 %24 %23
%24 = OpLabel
%14 = OpShiftRightLogical %5 %13 %15
%19 = OpCompositeConstruct %18 %16 %16 %16 %16
OpImageWrite %9 %14 %19
OpBranch %25
%23 = OpLabel
%20 = OpShiftRightLogical %5 %13 %15
%21 = OpCompositeConstruct %18 %13 %13 %13 %13
OpImageWrite %9 %20 %21
OpBranch %25
%25 = OpLabel
OpReturn
OpFunctionEnd
#endif
